// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: e3ViewYvztDa9TzbxJa8p5
// Component: qPb2JbResH
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Switch from "../../Switch"; // plasmic-import: EulLIyJN4yh/component
import Select from "../../Select"; // plasmic-import: rtVXJJFPDt8/component
import Select__Option from "../../Select__Option"; // plasmic-import: 72l763HKqO0/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_icl_mobile_app.module.css"; // plasmic-import: e3ViewYvztDa9TzbxJa8p5/projectcss
import sty from "./PlasmicDashboardSettings.module.css"; // plasmic-import: qPb2JbResH/css

import IconXLetterIcon from "./icons/PlasmicIcon__IconXLetter"; // plasmic-import: Celh43K4X/icon
import IconXLetter2Icon from "./icons/PlasmicIcon__IconXLetter2"; // plasmic-import: pSqGZ7JTE/icon
import SideBarBg10Icon from "./icons/PlasmicIcon__SideBarBg10"; // plasmic-import: mM8vd5AR2a/icon
import SideBarBg11Icon from "./icons/PlasmicIcon__SideBarBg11"; // plasmic-import: jhrBQFI_4k/icon
import SideBarBg12Icon from "./icons/PlasmicIcon__SideBarBg12"; // plasmic-import: uJlnvwo2GU/icon
import SideBarBg13Icon from "./icons/PlasmicIcon__SideBarBg13"; // plasmic-import: XYcxI3ttQh/icon
import Vector11Icon from "./icons/PlasmicIcon__Vector11"; // plasmic-import: 7HuyzapV0Z1/icon
import Vector12Icon from "./icons/PlasmicIcon__Vector12"; // plasmic-import: sZCOU1rWnkY/icon
import Vector10Icon from "./icons/PlasmicIcon__Vector10"; // plasmic-import: HfvRcbk1TR3/icon
import Ellipse25Icon from "./icons/PlasmicIcon__Ellipse25"; // plasmic-import: jSWxhDlI9OB/icon
import Ellipse26Icon from "./icons/PlasmicIcon__Ellipse26"; // plasmic-import: wPretASgV5m/icon
import Ellipse27Icon from "./icons/PlasmicIcon__Ellipse27"; // plasmic-import: ZS7Hk98lF1V/icon
import Ellipse28Icon from "./icons/PlasmicIcon__Ellipse28"; // plasmic-import: bBNQgXhZrhN/icon
import Ellipse29Icon from "./icons/PlasmicIcon__Ellipse29"; // plasmic-import: sanUNLZ4iUY/icon
import Ellipse30Icon from "./icons/PlasmicIcon__Ellipse30"; // plasmic-import: -Dcr31U4mNG/icon
import Ellipse32Icon from "./icons/PlasmicIcon__Ellipse32"; // plasmic-import: 5zy0oBwQ6gf/icon
import Vector14Icon from "./icons/PlasmicIcon__Vector14"; // plasmic-import: 7iGLisMMplo/icon
import SideBarBg5Icon from "./icons/PlasmicIcon__SideBarBg5"; // plasmic-import: bbaUeGde-p8/icon
import IconMenuIcon from "./icons/PlasmicIcon__IconMenu"; // plasmic-import: YA9Hw7S8ZRq/icon
import RectangleIcon from "./icons/PlasmicIcon__Rectangle"; // plasmic-import: UONN3UL-uo/icon
import CombinedShapeIcon from "./icons/PlasmicIcon__CombinedShape"; // plasmic-import: AJySRDgPsS/icon
import WiFiIcon from "./icons/PlasmicIcon__WiFi"; // plasmic-import: Yckalna_0K/icon
import bg9M1Ci2Eygo7 from "./images/bg9.svg"; // plasmic-import: m1CI2Eygo7/picture
import bg102AcnwTd5Ee from "./images/bg10.svg"; // plasmic-import: 2acnwTD5ee/picture
import bg115So6Lw0RKp from "./images/bg11.svg"; // plasmic-import: 5so6LW0rKP/picture
import bg12Bh3MizMnj from "./images/bg12.svg"; // plasmic-import: BH3Miz-MNJ/picture
import horizontalLineI33KuXqk5B from "./images/horizontalLine.svg"; // plasmic-import: i33kuXqk5B/picture
import verticalLineISr65F7Kv9F from "./images/verticalLine.svg"; // plasmic-import: iSr65F7KV9F/picture
import horizontalLine36R7NCvun from "./images/horizontalLine3.svg"; // plasmic-import: 6-R7n_cvun/picture
import verticalLine3KjcDv42Fo from "./images/verticalLine3.svg"; // plasmic-import: kjcDv42FO_/picture
import line55BgTwR9S from "./images/line5.svg"; // plasmic-import: _5Bg_twR9S/picture
import line6UFhZsWm3Dp from "./images/line6.svg"; // plasmic-import: UFhZsWm3-DP/picture
import halfPie3JaQvuF1YPw from "./images/halfPie3.svg"; // plasmic-import: JAQvuF_1yPW/picture
import ellipse31JoX6YNYbvhx from "./images/ellipse31.svg"; // plasmic-import: joX6yNYbvhx/picture

export type PlasmicDashboardSettings__VariantMembers = {};
export type PlasmicDashboardSettings__VariantsArgs = {};
type VariantPropType = keyof PlasmicDashboardSettings__VariantsArgs;
export const PlasmicDashboardSettings__VariantProps =
  new Array<VariantPropType>();

export type PlasmicDashboardSettings__ArgsType = {};
type ArgPropType = keyof PlasmicDashboardSettings__ArgsType;
export const PlasmicDashboardSettings__ArgProps = new Array<ArgPropType>();

export type PlasmicDashboardSettings__OverridesType = {
  root?: p.Flex<"div">;
  dashboardSettings?: p.Flex<"div">;
  frame509?: p.Flex<"div">;
  dashboardTitle?: p.Flex<"div">;
  close?: p.Flex<"a">;
  save?: p.Flex<"a">;
  overallSales?: p.Flex<"div">;
  group485?: p.Flex<"div">;
  icon?: p.Flex<"div">;
  rectangle149?: p.Flex<"div">;
  rectangle150?: p.Flex<"div">;
  overallSales2?: p.Flex<"div">;
  toggleShowHide?: p.Flex<"div">;
  toggleShowHide9?: p.Flex<typeof Switch>;
  totalRevenue?: p.Flex<"div">;
  group486?: p.Flex<"div">;
  icon2?: p.Flex<"div">;
  rectangle151?: p.Flex<"div">;
  rectangle140?: p.Flex<"div">;
  totalRevenue2?: p.Flex<"div">;
  _99HigherThanThePreviousMonth?: p.Flex<"div">;
  toggleShowHide2?: p.Flex<"div">;
  toggleShowHide10?: p.Flex<typeof Switch>;
  percentOfTotalSales?: p.Flex<"div">;
  group487?: p.Flex<"div">;
  icon3?: p.Flex<"div">;
  rectangle152?: p.Flex<"div">;
  rectangle141?: p.Flex<"div">;
  percentOfTotalSales2?: p.Flex<"div">;
  toggleShowHide3?: p.Flex<"div">;
  toggleShowHide11?: p.Flex<typeof Switch>;
  totalRedemptionSales?: p.Flex<"div">;
  group488?: p.Flex<"div">;
  icon4?: p.Flex<"div">;
  rectangle153?: p.Flex<"div">;
  rectangle142?: p.Flex<"div">;
  totalRedemptionSales2?: p.Flex<"div">;
  _99HigherThanThePreviousMonth2?: p.Flex<"div">;
  toggleShowHide4?: p.Flex<"div">;
  toggleShowHide12?: p.Flex<typeof Switch>;
  sixWeekGameTrend?: p.Flex<"div">;
  group380?: p.Flex<"div">;
  bars?: p.Flex<"div">;
  rectangle144?: p.Flex<"div">;
  rectangle146?: p.Flex<"div">;
  rectangle148?: p.Flex<"div">;
  rectangle147?: p.Flex<"div">;
  rectangle154?: p.Flex<"div">;
  rectangle145?: p.Flex<"div">;
  bottomNumbers?: p.Flex<"div">;
  title?: p.Flex<"div">;
  legend?: p.Flex<"div">;
  rectangle143?: p.Flex<"div">;
  toggleShowHide5?: p.Flex<"div">;
  toggleShowHide13?: p.Flex<typeof Switch>;
  gateAttraction?: p.Flex<"div">;
  group381?: p.Flex<"div">;
  bottomNumbers2?: p.Flex<"div">;
  _0?: p.Flex<"div">;
  _200?: p.Flex<"div">;
  _400?: p.Flex<"div">;
  _600?: p.Flex<"div">;
  _800?: p.Flex<"div">;
  _1000?: p.Flex<"div">;
  week6?: p.Flex<"div">;
  week5?: p.Flex<"div">;
  week4?: p.Flex<"div">;
  week3?: p.Flex<"div">;
  week2?: p.Flex<"div">;
  week1?: p.Flex<"div">;
  group468?: p.Flex<"div">;
  legend3?: p.Flex<"div">;
  rectangle156?: p.Flex<"div">;
  toggleShowHide6?: p.Flex<"div">;
  toggleShowHide14?: p.Flex<typeof Switch>;
  legend2?: p.Flex<"div">;
  rectangle155?: p.Flex<"div">;
  location?: p.Flex<"div">;
  group474?: p.Flex<"div">;
  group469?: p.Flex<"div">;
  locPrice?: p.Flex<"div">;
  locationLable?: p.Flex<"div">;
  locationLable2?: p.Flex<"div">;
  locationLable3?: p.Flex<"div">;
  locationLable4?: p.Flex<"div">;
  group479?: p.Flex<"div">;
  locationLable5?: p.Flex<"div">;
  group259?: p.Flex<"div">;
  legend4?: p.Flex<"div">;
  rectangle157?: p.Flex<"div">;
  legend5?: p.Flex<"div">;
  rectangle158?: p.Flex<"div">;
  legend7?: p.Flex<"div">;
  rectangle160?: p.Flex<"div">;
  legend8?: p.Flex<"div">;
  rectangle161?: p.Flex<"div">;
  toggleShowHide7?: p.Flex<"div">;
  toggleShowHide15?: p.Flex<typeof Switch>;
  legend6?: p.Flex<"div">;
  rectangle159?: p.Flex<"div">;
  packageDealIRevenueReport?: p.Flex<"div">;
  group473?: p.Flex<"div">;
  pie?: p.Flex<"div">;
  location160800?: p.Flex<"div">;
  location237200?: p.Flex<"div">;
  location345400?: p.Flex<"div">;
  location431800?: p.Flex<"div">;
  group472?: p.Flex<"div">;
  frame474?: p.Flex<"div">;
  legend9?: p.Flex<"div">;
  rectangle162?: p.Flex<"div">;
  legend10?: p.Flex<"div">;
  rectangle163?: p.Flex<"div">;
  legend11?: p.Flex<"div">;
  rectangle164?: p.Flex<"div">;
  legend12?: p.Flex<"div">;
  rectangle165?: p.Flex<"div">;
  legend13?: p.Flex<"div">;
  rectangle166?: p.Flex<"div">;
  toggleShowHide8?: p.Flex<"div">;
  toggleShowHide16?: p.Flex<typeof Switch>;
  logoHeader?: p.Flex<"div">;
  intercardLogoNoTagline?: p.Flex<"div">;
  statusBar?: p.Flex<"div">;
  symbols?: p.Flex<"div">;
  battery?: p.Flex<"div">;
  rectangle?: p.Flex<"div">;
  barsStatusTime?: p.Flex<"div">;
  time?: p.Flex<"div">;
};

export interface DefaultDashboardSettingsProps {
  className?: string;
}

function PlasmicDashboardSettings__RenderFunc(props: {
  variants: PlasmicDashboardSettings__VariantsArgs;
  args: PlasmicDashboardSettings__ArgsType;
  overrides: PlasmicDashboardSettings__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  return (
    <React.Fragment>
      {}

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          sty.root
        )}
      >
        <div
          data-plasmic-name={"dashboardSettings"}
          data-plasmic-override={overrides.dashboardSettings}
          className={classNames(projectcss.all, sty.dashboardSettings)}
        >
          <div
            data-plasmic-name={"frame509"}
            data-plasmic-override={overrides.frame509}
            className={classNames(projectcss.all, sty.frame509)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"dashboardTitle"}
              data-plasmic-override={overrides.dashboardTitle}
              hasGap={true}
              className={classNames(projectcss.all, sty.dashboardTitle)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fiWi2
                )}
              >
                {"DASHBOARD Settings"}
              </div>

              <p.Stack
                as={"a"}
                data-plasmic-name={"close"}
                data-plasmic-override={overrides.close}
                hasGap={true}
                className={classNames(projectcss.all, projectcss.a, sty.close)}
                href={`/new-page`}
              >
                <IconXLetterIcon
                  className={classNames(projectcss.all, sty.svg__yTdig)}
                  role={"img"}
                />
              </p.Stack>

              <p.Stack
                as={"a"}
                data-plasmic-name={"save"}
                data-plasmic-override={overrides.save}
                hasGap={true}
                className={classNames(projectcss.all, projectcss.a, sty.save)}
                href={`/new-page`}
              >
                <IconXLetter2Icon
                  className={classNames(projectcss.all, sty.svg__ijzUx)}
                  role={"img"}
                />
              </p.Stack>
            </p.Stack>

            <div
              data-plasmic-name={"overallSales"}
              data-plasmic-override={overrides.overallSales}
              className={classNames(projectcss.all, sty.overallSales)}
            >
              {false ? (
                <SideBarBg10Icon
                  className={classNames(projectcss.all, sty.svg__nn0Bq)}
                  role={"img"}
                />
              ) : null}
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__leZUb)}
                  displayHeight={"28.842px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"198.59px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: bg9M1Ci2Eygo7,
                    fullWidth: 198.59,
                    fullHeight: 28.842,
                    aspectRatio: 6.862069
                  }}
                />
              ) : null}

              <div
                data-plasmic-name={"group485"}
                data-plasmic-override={overrides.group485}
                className={classNames(projectcss.all, sty.group485)}
              >
                <div
                  data-plasmic-name={"icon"}
                  data-plasmic-override={overrides.icon}
                  className={classNames(projectcss.all, sty.icon)}
                >
                  <div
                    data-plasmic-name={"rectangle149"}
                    data-plasmic-override={overrides.rectangle149}
                    className={classNames(projectcss.all, sty.rectangle149)}
                  />

                  <div
                    data-plasmic-name={"rectangle150"}
                    data-plasmic-override={overrides.rectangle150}
                    className={classNames(projectcss.all, sty.rectangle150)}
                  />
                </div>

                <div
                  data-plasmic-name={"overallSales2"}
                  data-plasmic-override={overrides.overallSales2}
                  className={classNames(projectcss.all, sty.overallSales2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kXyej
                    )}
                  >
                    {"Overall Sales"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qVvXq
                  )}
                >
                  {"$999,999.99"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gekC
                  )}
                >
                  {"99% higher than the previous month"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide"}
                  data-plasmic-override={overrides.toggleShowHide}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide9"}
                    data-plasmic-override={overrides.toggleShowHide9}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide9
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"totalRevenue"}
              data-plasmic-override={overrides.totalRevenue}
              className={classNames(projectcss.all, sty.totalRevenue)}
            >
              {false ? (
                <SideBarBg11Icon
                  className={classNames(projectcss.all, sty.svg__yzoJq)}
                  role={"img"}
                />
              ) : null}
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__wEwku)}
                  displayHeight={"28.842px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"198.59px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: bg102AcnwTd5Ee,
                    fullWidth: 198.59,
                    fullHeight: 28.842,
                    aspectRatio: 6.862069
                  }}
                />
              ) : null}

              <div
                data-plasmic-name={"group486"}
                data-plasmic-override={overrides.group486}
                className={classNames(projectcss.all, sty.group486)}
              >
                <div
                  data-plasmic-name={"icon2"}
                  data-plasmic-override={overrides.icon2}
                  className={classNames(projectcss.all, sty.icon2)}
                >
                  <div
                    data-plasmic-name={"rectangle151"}
                    data-plasmic-override={overrides.rectangle151}
                    className={classNames(projectcss.all, sty.rectangle151)}
                  />

                  <div
                    data-plasmic-name={"rectangle140"}
                    data-plasmic-override={overrides.rectangle140}
                    className={classNames(projectcss.all, sty.rectangle140)}
                  />
                </div>

                <div
                  data-plasmic-name={"totalRevenue2"}
                  data-plasmic-override={overrides.totalRevenue2}
                  className={classNames(projectcss.all, sty.totalRevenue2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kmXy9
                    )}
                  >
                    {"Total Revenue"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zH1IO
                  )}
                >
                  {"$77,239.90"}
                </div>

                <div
                  data-plasmic-name={"_99HigherThanThePreviousMonth"}
                  data-plasmic-override={
                    overrides._99HigherThanThePreviousMonth
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty._99HigherThanThePreviousMonth
                  )}
                >
                  {"50% lower than the previous month"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide2"}
                  data-plasmic-override={overrides.toggleShowHide2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide2)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide10"}
                    data-plasmic-override={overrides.toggleShowHide10}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide10
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"percentOfTotalSales"}
              data-plasmic-override={overrides.percentOfTotalSales}
              className={classNames(projectcss.all, sty.percentOfTotalSales)}
            >
              {false ? (
                <SideBarBg12Icon
                  className={classNames(projectcss.all, sty.svg__twzlv)}
                  role={"img"}
                />
              ) : null}
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ie716)}
                  displayHeight={"28.842px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"198.59px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: bg115So6Lw0RKp,
                    fullWidth: 198.59,
                    fullHeight: 28.842,
                    aspectRatio: 6.862069
                  }}
                />
              ) : null}

              <div
                data-plasmic-name={"group487"}
                data-plasmic-override={overrides.group487}
                className={classNames(projectcss.all, sty.group487)}
              >
                <div
                  data-plasmic-name={"icon3"}
                  data-plasmic-override={overrides.icon3}
                  className={classNames(projectcss.all, sty.icon3)}
                >
                  <div
                    data-plasmic-name={"rectangle152"}
                    data-plasmic-override={overrides.rectangle152}
                    className={classNames(projectcss.all, sty.rectangle152)}
                  />

                  <div
                    data-plasmic-name={"rectangle141"}
                    data-plasmic-override={overrides.rectangle141}
                    className={classNames(projectcss.all, sty.rectangle141)}
                  />
                </div>

                <div
                  data-plasmic-name={"percentOfTotalSales2"}
                  data-plasmic-override={overrides.percentOfTotalSales2}
                  className={classNames(
                    projectcss.all,
                    sty.percentOfTotalSales2
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sakJx
                    )}
                  >
                    {"Percent of Total Sales"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__thZno
                  )}
                >
                  {"99.99%"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__umxQ6
                  )}
                >
                  {"99% higher than the previous month"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide3"}
                  data-plasmic-override={overrides.toggleShowHide3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide3)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide11"}
                    data-plasmic-override={overrides.toggleShowHide11}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide11
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>
              </div>
            </div>

            <div
              data-plasmic-name={"totalRedemptionSales"}
              data-plasmic-override={overrides.totalRedemptionSales}
              className={classNames(projectcss.all, sty.totalRedemptionSales)}
            >
              {false ? (
                <SideBarBg13Icon
                  className={classNames(projectcss.all, sty.svg__vjAtE)}
                  role={"img"}
                />
              ) : null}
              {false ? (
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__r3HU2)}
                  displayHeight={"28.842px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"198.59px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: bg12Bh3MizMnj,
                    fullWidth: 198.59,
                    fullHeight: 28.842,
                    aspectRatio: 6.862069
                  }}
                />
              ) : null}

              <div
                data-plasmic-name={"group488"}
                data-plasmic-override={overrides.group488}
                className={classNames(projectcss.all, sty.group488)}
              >
                <div
                  data-plasmic-name={"icon4"}
                  data-plasmic-override={overrides.icon4}
                  className={classNames(projectcss.all, sty.icon4)}
                >
                  <div
                    data-plasmic-name={"rectangle153"}
                    data-plasmic-override={overrides.rectangle153}
                    className={classNames(projectcss.all, sty.rectangle153)}
                  />

                  <div
                    data-plasmic-name={"rectangle142"}
                    data-plasmic-override={overrides.rectangle142}
                    className={classNames(projectcss.all, sty.rectangle142)}
                  />
                </div>

                <div
                  data-plasmic-name={"totalRedemptionSales2"}
                  data-plasmic-override={overrides.totalRedemptionSales2}
                  className={classNames(
                    projectcss.all,
                    sty.totalRedemptionSales2
                  )}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__siUxx
                    )}
                  >
                    {"Total Redemption Sales"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zZTvU
                  )}
                >
                  {"$987,654.32"}
                </div>

                <div
                  data-plasmic-name={"_99HigherThanThePreviousMonth2"}
                  data-plasmic-override={
                    overrides._99HigherThanThePreviousMonth2
                  }
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty._99HigherThanThePreviousMonth2
                  )}
                >
                  {"50% lower than the previous month"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide4"}
                  data-plasmic-override={overrides.toggleShowHide4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide4)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide12"}
                    data-plasmic-override={overrides.toggleShowHide12}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide12
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"sixWeekGameTrend"}
              data-plasmic-override={overrides.sixWeekGameTrend}
              hasGap={true}
              className={classNames(projectcss.all, sty.sixWeekGameTrend)}
            >
              <div
                data-plasmic-name={"group380"}
                data-plasmic-override={overrides.group380}
                className={classNames(projectcss.all, sty.group380)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__hyQ8F)}
                  displayHeight={"195.092px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"261.605px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: horizontalLineI33KuXqk5B,
                    fullWidth: 261.605,
                    fullHeight: 195.092,
                    aspectRatio: 1.323232
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__udz)}
                  displayHeight={"256.013px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"198.049px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: verticalLineISr65F7Kv9F,
                    fullWidth: 198.049,
                    fullHeight: 256.013,
                    aspectRatio: 0.771318
                  }}
                />

                <div
                  data-plasmic-name={"bars"}
                  data-plasmic-override={overrides.bars}
                  className={classNames(projectcss.all, sty.bars)}
                >
                  <div
                    data-plasmic-name={"rectangle144"}
                    data-plasmic-override={overrides.rectangle144}
                    className={classNames(projectcss.all, sty.rectangle144)}
                  />

                  <div
                    data-plasmic-name={"rectangle146"}
                    data-plasmic-override={overrides.rectangle146}
                    className={classNames(projectcss.all, sty.rectangle146)}
                  />

                  <div
                    data-plasmic-name={"rectangle148"}
                    data-plasmic-override={overrides.rectangle148}
                    className={classNames(projectcss.all, sty.rectangle148)}
                  />

                  <div
                    data-plasmic-name={"rectangle147"}
                    data-plasmic-override={overrides.rectangle147}
                    className={classNames(projectcss.all, sty.rectangle147)}
                  />

                  <div
                    data-plasmic-name={"rectangle154"}
                    data-plasmic-override={overrides.rectangle154}
                    className={classNames(projectcss.all, sty.rectangle154)}
                  />

                  <div
                    data-plasmic-name={"rectangle145"}
                    data-plasmic-override={overrides.rectangle145}
                    className={classNames(projectcss.all, sty.rectangle145)}
                  />
                </div>

                <div
                  data-plasmic-name={"bottomNumbers"}
                  data-plasmic-override={overrides.bottomNumbers}
                  className={classNames(projectcss.all, sty.bottomNumbers)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fRffN
                    )}
                  >
                    {"0"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pzLis
                    )}
                  >
                    {"200"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___73OfP
                    )}
                  >
                    {"400"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__axlMz
                    )}
                  >
                    {"600"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rm7Qz
                    )}
                  >
                    {"800"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xin7P
                    )}
                  >
                    {"1000"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hnq0A
                  )}
                >
                  {"Week 6"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ufV6
                  )}
                >
                  {"Week 5"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b8Ea8
                  )}
                >
                  {"Week 4"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wOJgQ
                  )}
                >
                  {"Week 3"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lOwVs
                  )}
                >
                  {"Week 2"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kf5Ut
                  )}
                >
                  {"Week 1"}
                </div>

                <div
                  data-plasmic-name={"title"}
                  data-plasmic-override={overrides.title}
                  className={classNames(projectcss.all, sty.title)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend"}
                    data-plasmic-override={overrides.legend}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend)}
                  >
                    <div
                      data-plasmic-name={"rectangle143"}
                      data-plasmic-override={overrides.rectangle143}
                      className={classNames(projectcss.all, sty.rectangle143)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___15W74
                      )}
                    >
                      {"Sales"}
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s8A2E
                    )}
                  >
                    {"SIX WEEK GAME TREND"}
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide5"}
                  data-plasmic-override={overrides.toggleShowHide5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide5)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide13"}
                    data-plasmic-override={overrides.toggleShowHide13}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide13
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>

                <Select
                  className={classNames("__wab_instance", sty.select__qcZMk)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qYW
                      )}
                    >
                      {"Graph Type"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__oCrEp)}
                    value={"value1" as const}
                  >
                    {"Line Graph"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___72Jc)}
                    value={"value2" as const}
                  >
                    {"Pie Chart"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__aLsNe)}
                    value={"value2 2" as const}
                  >
                    {"Bar Chart"}
                  </Select__Option>
                </Select>

                <Select
                  className={classNames("__wab_instance", sty.select__cVq3K)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fCigl
                      )}
                    >
                      {"Last 6 Months"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__vQ5Bw)}
                    value={"value1" as const}
                  >
                    {"Last 6 Months"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___0MutQ)}
                    value={"value2" as const}
                  >
                    {"This Month"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__iTip)}
                    value={"value2 2" as const}
                  >
                    {"1 Week"}
                  </Select__Option>
                </Select>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"gateAttraction"}
              data-plasmic-override={overrides.gateAttraction}
              hasGap={true}
              className={classNames(projectcss.all, sty.gateAttraction)}
            >
              <div
                data-plasmic-name={"group381"}
                data-plasmic-override={overrides.group381}
                className={classNames(projectcss.all, sty.group381)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rVPcp)}
                  displayHeight={"167.362px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"265.665px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: horizontalLine36R7NCvun,
                    fullWidth: 265.665,
                    fullHeight: 167.362,
                    aspectRatio: 1.564706
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__rHtm6)}
                  displayHeight={"263.55px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"170.151px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: verticalLine3KjcDv42Fo,
                    fullWidth: 170.151,
                    fullHeight: 263.55,
                    aspectRatio: 0.645283
                  }}
                />

                <div
                  data-plasmic-name={"bottomNumbers2"}
                  data-plasmic-override={overrides.bottomNumbers2}
                  className={classNames(projectcss.all, sty.bottomNumbers2)}
                >
                  <div
                    data-plasmic-name={"_0"}
                    data-plasmic-override={overrides._0}
                    className={classNames(projectcss.all, sty._0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__weT8F
                      )}
                    >
                      {"0"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"_200"}
                    data-plasmic-override={overrides._200}
                    className={classNames(projectcss.all, sty._200)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__brcEy
                      )}
                    >
                      {"200"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"_400"}
                    data-plasmic-override={overrides._400}
                    className={classNames(projectcss.all, sty._400)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r5GIj
                      )}
                    >
                      {"400"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"_600"}
                    data-plasmic-override={overrides._600}
                    className={classNames(projectcss.all, sty._600)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o1EC0
                      )}
                    >
                      {"600"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"_800"}
                    data-plasmic-override={overrides._800}
                    className={classNames(projectcss.all, sty._800)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tho6D
                      )}
                    >
                      {"800"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"_1000"}
                    data-plasmic-override={overrides._1000}
                    className={classNames(projectcss.all, sty._1000)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tX8Nu
                      )}
                    >
                      {"1000"}
                    </div>
                  </div>
                </div>

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__ptn3)}
                  displayHeight={"119.385px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"219.131px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: line55BgTwR9S,
                    fullWidth: 219.131,
                    fullHeight: 119.385,
                    aspectRatio: 1.833333
                  }}
                />

                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__kPi5)}
                  displayHeight={"86.47px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"219.131px" as const}
                  loading={"lazy" as const}
                  src={{
                    src: line6UFhZsWm3Dp,
                    fullWidth: 219.131,
                    fullHeight: 86.47,
                    aspectRatio: 2.528736
                  }}
                />

                <div
                  data-plasmic-name={"week6"}
                  data-plasmic-override={overrides.week6}
                  className={classNames(projectcss.all, sty.week6)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kc26X
                    )}
                  >
                    {"Week 6"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"week5"}
                  data-plasmic-override={overrides.week5}
                  className={classNames(projectcss.all, sty.week5)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wVwJe
                    )}
                  >
                    {"Week 5"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"week4"}
                  data-plasmic-override={overrides.week4}
                  className={classNames(projectcss.all, sty.week4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e5MjS
                    )}
                  >
                    {"Week 4"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"week3"}
                  data-plasmic-override={overrides.week3}
                  className={classNames(projectcss.all, sty.week3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1YNa
                    )}
                  >
                    {"Week 3"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"week2"}
                  data-plasmic-override={overrides.week2}
                  className={classNames(projectcss.all, sty.week2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___31Lmj
                    )}
                  >
                    {"Week 2"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"week1"}
                  data-plasmic-override={overrides.week1}
                  className={classNames(projectcss.all, sty.week1)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rlrO0
                    )}
                  >
                    {"Week 1"}
                  </div>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zzGm
                  )}
                >
                  {"GATE / ATTRACTION REVENUE"}
                </div>

                <div
                  data-plasmic-name={"group468"}
                  data-plasmic-override={overrides.group468}
                  className={classNames(projectcss.all, sty.group468)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend3"}
                    data-plasmic-override={overrides.legend3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend3)}
                  >
                    <div
                      data-plasmic-name={"rectangle156"}
                      data-plasmic-override={overrides.rectangle156}
                      className={classNames(projectcss.all, sty.rectangle156)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wVdfo
                      )}
                    >
                      {"Sold at the POS"}
                    </div>
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide6"}
                  data-plasmic-override={overrides.toggleShowHide6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide6)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide14"}
                    data-plasmic-override={overrides.toggleShowHide14}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide14
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"legend2"}
                  data-plasmic-override={overrides.legend2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.legend2)}
                >
                  <div
                    data-plasmic-name={"rectangle155"}
                    data-plasmic-override={overrides.rectangle155}
                    className={classNames(projectcss.all, sty.rectangle155)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oLsIe
                    )}
                  >
                    {"Sold at the Gate"}
                  </div>
                </p.Stack>

                <Select
                  className={classNames("__wab_instance", sty.select__aus5F)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jOObo
                      )}
                    >
                      {"Graph Type"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__eQuTe)}
                    value={"value1" as const}
                  >
                    {"Line Graph"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___72Jc)}
                    value={"value2" as const}
                  >
                    {"Pie Chart"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__aLsNe)}
                    value={"value2 2" as const}
                  >
                    {"Bar Chart"}
                  </Select__Option>
                </Select>

                <Select
                  className={classNames("__wab_instance", sty.select__xg2M)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9G8T
                      )}
                    >
                      {"Last 6 Months"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option___6LiUm)}
                    value={"value1" as const}
                  >
                    {"Last 6 Months"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___0MutQ)}
                    value={"value2" as const}
                  >
                    {"This Month"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__iTip)}
                    value={"value2 2" as const}
                  >
                    {"1 Week"}
                  </Select__Option>
                </Select>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"location"}
              data-plasmic-override={overrides.location}
              hasGap={true}
              className={classNames(projectcss.all, sty.location)}
            >
              <div
                data-plasmic-name={"group474"}
                data-plasmic-override={overrides.group474}
                className={classNames(projectcss.all, sty.group474)}
              >
                <div
                  data-plasmic-name={"group469"}
                  data-plasmic-override={overrides.group469}
                  className={classNames(projectcss.all, sty.group469)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__acmTn)}
                    displayHeight={"104.971px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"209.943px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: halfPie3JaQvuF1YPw,
                      fullWidth: 209.943,
                      fullHeight: 104.971,
                      aspectRatio: 1.813953
                    }}
                  />

                  <div
                    data-plasmic-name={"locPrice"}
                    data-plasmic-override={overrides.locPrice}
                    className={classNames(projectcss.all, sty.locPrice)}
                  >
                    <div
                      data-plasmic-name={"locationLable"}
                      data-plasmic-override={overrides.locationLable}
                      className={classNames(projectcss.all, sty.locationLable)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6LUqv
                        )}
                      >
                        {"Location 5\n$111.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"locationLable2"}
                      data-plasmic-override={overrides.locationLable2}
                      className={classNames(projectcss.all, sty.locationLable2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ur5Pt
                        )}
                      >
                        {"Location 4\n$318.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"locationLable3"}
                      data-plasmic-override={overrides.locationLable3}
                      className={classNames(projectcss.all, sty.locationLable3)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2QyP9
                        )}
                      >
                        {"Location 2\n$318.00"}
                      </div>

                      <Vector11Icon
                        className={classNames(projectcss.all, sty.svg__spaU)}
                        role={"img"}
                      />
                    </div>

                    <div
                      data-plasmic-name={"locationLable4"}
                      data-plasmic-override={overrides.locationLable4}
                      className={classNames(projectcss.all, sty.locationLable4)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fks3
                        )}
                      >
                        {"Location 3\n$318.00"}
                      </div>

                      <Vector12Icon
                        className={classNames(projectcss.all, sty.svg__fhRhA)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"group479"}
                        data-plasmic-override={overrides.group479}
                        className={classNames(projectcss.all, sty.group479)}
                      >
                        <div
                          data-plasmic-name={"locationLable5"}
                          data-plasmic-override={overrides.locationLable5}
                          className={classNames(
                            projectcss.all,
                            sty.locationLable5
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___32LdI
                            )}
                          >
                            {"Location 5\n$111.00"}
                          </div>
                        </div>

                        <Vector12Icon
                          className={classNames(projectcss.all, sty.svg__d8Cn)}
                          role={"img"}
                        />
                      </div>

                      <Vector11Icon
                        className={classNames(projectcss.all, sty.svg__t2PzW)}
                        role={"img"}
                      />
                    </div>

                    <Vector10Icon
                      className={classNames(projectcss.all, sty.svg__gjJ35)}
                      role={"img"}
                    />
                  </div>
                </div>

                <div
                  data-plasmic-name={"group259"}
                  data-plasmic-override={overrides.group259}
                  className={classNames(projectcss.all, sty.group259)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend4"}
                    data-plasmic-override={overrides.legend4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend4)}
                  >
                    <div
                      data-plasmic-name={"rectangle157"}
                      data-plasmic-override={overrides.rectangle157}
                      className={classNames(projectcss.all, sty.rectangle157)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r0OjX
                      )}
                    >
                      {"Location 1"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend5"}
                    data-plasmic-override={overrides.legend5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend5)}
                  >
                    <div
                      data-plasmic-name={"rectangle158"}
                      data-plasmic-override={overrides.rectangle158}
                      className={classNames(projectcss.all, sty.rectangle158)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l8Pgx
                      )}
                    >
                      {"Location 2"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend7"}
                    data-plasmic-override={overrides.legend7}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend7)}
                  >
                    <div
                      data-plasmic-name={"rectangle160"}
                      data-plasmic-override={overrides.rectangle160}
                      className={classNames(projectcss.all, sty.rectangle160)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nbGu
                      )}
                    >
                      {"Location 4"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend8"}
                    data-plasmic-override={overrides.legend8}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend8)}
                  >
                    <div
                      data-plasmic-name={"rectangle161"}
                      data-plasmic-override={overrides.rectangle161}
                      className={classNames(projectcss.all, sty.rectangle161)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lAi
                      )}
                    >
                      {"Location 5"}
                    </div>
                  </p.Stack>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yaGC
                  )}
                >
                  {"LOCATIONS"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide7"}
                  data-plasmic-override={overrides.toggleShowHide7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide7)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide15"}
                    data-plasmic-override={overrides.toggleShowHide15}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide15
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"legend6"}
                  data-plasmic-override={overrides.legend6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.legend6)}
                >
                  <div
                    data-plasmic-name={"rectangle159"}
                    data-plasmic-override={overrides.rectangle159}
                    className={classNames(projectcss.all, sty.rectangle159)}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zw7Z
                    )}
                  >
                    {"Location 3"}
                  </div>
                </p.Stack>

                <Select
                  className={classNames("__wab_instance", sty.select__wUak)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__adLpj
                      )}
                    >
                      {"Graph Type"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__dnmTa)}
                    value={"value1" as const}
                  >
                    {"Line Graph"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___72Jc)}
                    value={"value2" as const}
                  >
                    {"Pie Chart"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__aLsNe)}
                    value={"value2 2" as const}
                  >
                    {"Bar Chart"}
                  </Select__Option>
                </Select>

                <Select
                  className={classNames("__wab_instance", sty.select__mHneM)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___07LX
                      )}
                    >
                      {"Last 6 Months"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__rAvsR)}
                    value={"value1" as const}
                  >
                    {"Last 6 Months"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___0MutQ)}
                    value={"value2" as const}
                  >
                    {"This Month"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__iTip)}
                    value={"value2 2" as const}
                  >
                    {"1 Week"}
                  </Select__Option>
                </Select>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"packageDealIRevenueReport"}
              data-plasmic-override={overrides.packageDealIRevenueReport}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.packageDealIRevenueReport
              )}
            >
              <div
                data-plasmic-name={"group473"}
                data-plasmic-override={overrides.group473}
                className={classNames(projectcss.all, sty.group473)}
              >
                <div
                  data-plasmic-name={"pie"}
                  data-plasmic-override={overrides.pie}
                  className={classNames(projectcss.all, sty.pie)}
                >
                  <Ellipse25Icon
                    className={classNames(projectcss.all, sty.svg__ejPw2)}
                    role={"img"}
                  />

                  <Ellipse26Icon
                    className={classNames(projectcss.all, sty.svg___2QhV3)}
                    role={"img"}
                  />

                  <Ellipse27Icon
                    className={classNames(projectcss.all, sty.svg___6LmH5)}
                    role={"img"}
                  />

                  <Ellipse28Icon
                    className={classNames(projectcss.all, sty.svg__kCotb)}
                    role={"img"}
                  />

                  <Ellipse29Icon
                    className={classNames(projectcss.all, sty.svg__bHrpS)}
                    role={"img"}
                  />

                  <Ellipse30Icon
                    className={classNames(projectcss.all, sty.svg__cVxt)}
                    role={"img"}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__a2XbE)}
                    displayHeight={"93px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"88px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: ellipse31JoX6YNYbvhx,
                      fullWidth: 88,
                      fullHeight: 93,
                      aspectRatio: 0.946237
                    }}
                  />

                  <Ellipse32Icon
                    className={classNames(projectcss.all, sty.svg__hpJH)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"location160800"}
                    data-plasmic-override={overrides.location160800}
                    className={classNames(projectcss.all, sty.location160800)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___74Z2
                      )}
                    >
                      {"Location 1\n$608.00"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"location237200"}
                    data-plasmic-override={overrides.location237200}
                    className={classNames(projectcss.all, sty.location237200)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__inDl9
                      )}
                    >
                      {"Location 2\n$372.00"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"location345400"}
                    data-plasmic-override={overrides.location345400}
                    className={classNames(projectcss.all, sty.location345400)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u9Fji
                      )}
                    >
                      {"Location 3\n$454.00"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"location431800"}
                    data-plasmic-override={overrides.location431800}
                    className={classNames(projectcss.all, sty.location431800)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5ITyn
                      )}
                    >
                      {"Location 4\n$318.00"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"group472"}
                    data-plasmic-override={overrides.group472}
                    className={classNames(projectcss.all, sty.group472)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oTwuL
                      )}
                    >
                      {"Location 5\n$111.00"}
                    </div>

                    <Vector14Icon
                      className={classNames(projectcss.all, sty.svg__ty8Uk)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j9Jd
                    )}
                  >
                    {"PACKAGE DEAL | REVENUE REPORT"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"frame474"}
                  data-plasmic-override={overrides.frame474}
                  className={classNames(projectcss.all, sty.frame474)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend9"}
                    data-plasmic-override={overrides.legend9}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend9)}
                  >
                    <div
                      data-plasmic-name={"rectangle162"}
                      data-plasmic-override={overrides.rectangle162}
                      className={classNames(projectcss.all, sty.rectangle162)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nKYlI
                      )}
                    >
                      {"Location 1"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend10"}
                    data-plasmic-override={overrides.legend10}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend10)}
                  >
                    <div
                      data-plasmic-name={"rectangle163"}
                      data-plasmic-override={overrides.rectangle163}
                      className={classNames(projectcss.all, sty.rectangle163)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4LPGg
                      )}
                    >
                      {"Location 2"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend11"}
                    data-plasmic-override={overrides.legend11}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend11)}
                  >
                    <div
                      data-plasmic-name={"rectangle164"}
                      data-plasmic-override={overrides.rectangle164}
                      className={classNames(projectcss.all, sty.rectangle164)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g2K64
                      )}
                    >
                      {"Location 3"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend12"}
                    data-plasmic-override={overrides.legend12}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend12)}
                  >
                    <div
                      data-plasmic-name={"rectangle165"}
                      data-plasmic-override={overrides.rectangle165}
                      className={classNames(projectcss.all, sty.rectangle165)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aDlr
                      )}
                    >
                      {"Location 4"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"legend13"}
                    data-plasmic-override={overrides.legend13}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.legend13)}
                  >
                    <div
                      data-plasmic-name={"rectangle166"}
                      data-plasmic-override={overrides.rectangle166}
                      className={classNames(projectcss.all, sty.rectangle166)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9SwiQ
                      )}
                    >
                      {"Location 5"}
                    </div>
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"toggleShowHide8"}
                  data-plasmic-override={overrides.toggleShowHide8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.toggleShowHide8)}
                >
                  <Switch
                    data-plasmic-name={"toggleShowHide16"}
                    data-plasmic-override={overrides.toggleShowHide16}
                    className={classNames(
                      "__wab_instance",
                      sty.toggleShowHide16
                    )}
                  >
                    {"Show"}
                  </Switch>
                </p.Stack>

                <Select
                  className={classNames("__wab_instance", sty.select__cnv2)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aypyB
                      )}
                    >
                      {"Graph Type"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__rqmLp)}
                    value={"value1" as const}
                  >
                    {"Line Graph"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___72Jc)}
                    value={"value2" as const}
                  >
                    {"Pie Chart"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__aLsNe)}
                    value={"value2 2" as const}
                  >
                    {"Bar Chart"}
                  </Select__Option>
                </Select>

                <Select
                  className={classNames("__wab_instance", sty.select__qyExz)}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__poXe6
                      )}
                    >
                      {"Last 6 Months"}
                    </div>
                  }
                >
                  <Select__Option
                    className={classNames("__wab_instance", sty.option__wrDbO)}
                    value={"value1" as const}
                  >
                    {"Last 6 Months"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option___0MutQ)}
                    value={"value2" as const}
                  >
                    {"This Month"}
                  </Select__Option>

                  <Select__Option
                    className={classNames("__wab_instance", sty.option__iTip)}
                    value={"value2 2" as const}
                  >
                    {"1 Week"}
                  </Select__Option>
                </Select>
              </div>
            </p.Stack>
          </div>

          <div
            data-plasmic-name={"logoHeader"}
            data-plasmic-override={overrides.logoHeader}
            className={classNames(projectcss.all, sty.logoHeader)}
          >
            <SideBarBg5Icon
              className={classNames(projectcss.all, sty.svg__zu0Co)}
              role={"img"}
            />

            <div
              data-plasmic-name={"intercardLogoNoTagline"}
              data-plasmic-override={overrides.intercardLogoNoTagline}
              className={classNames(projectcss.all, sty.intercardLogoNoTagline)}
            />

            <IconMenuIcon
              className={classNames(projectcss.all, sty.svg__ovhjr)}
              role={"img"}
            />
          </div>

          <div
            data-plasmic-name={"statusBar"}
            data-plasmic-override={overrides.statusBar}
            className={classNames(projectcss.all, sty.statusBar)}
          >
            <div
              data-plasmic-name={"symbols"}
              data-plasmic-override={overrides.symbols}
              className={classNames(projectcss.all, sty.symbols)}
            >
              <div
                data-plasmic-name={"battery"}
                data-plasmic-override={overrides.battery}
                className={classNames(projectcss.all, sty.battery)}
              >
                <RectangleIcon
                  className={classNames(projectcss.all, sty.svg__f1RcZ)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"rectangle"}
                  data-plasmic-override={overrides.rectangle}
                  className={classNames(projectcss.all, sty.rectangle)}
                />
              </div>

              <CombinedShapeIcon
                className={classNames(projectcss.all, sty.svg___0BgGn)}
                role={"img"}
              />

              <WiFiIcon
                className={classNames(projectcss.all, sty.svg___32V8I)}
                role={"img"}
              />
            </div>

            <div
              data-plasmic-name={"barsStatusTime"}
              data-plasmic-override={overrides.barsStatusTime}
              className={classNames(projectcss.all, sty.barsStatusTime)}
            >
              <div
                data-plasmic-name={"time"}
                data-plasmic-override={overrides.time}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.time
                )}
              >
                {"9:41"}
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "dashboardSettings",
    "frame509",
    "dashboardTitle",
    "close",
    "save",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle150",
    "overallSales2",
    "toggleShowHide",
    "toggleShowHide9",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle151",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "toggleShowHide2",
    "toggleShowHide10",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle152",
    "rectangle141",
    "percentOfTotalSales2",
    "toggleShowHide3",
    "toggleShowHide11",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle153",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "toggleShowHide4",
    "toggleShowHide12",
    "sixWeekGameTrend",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145",
    "bottomNumbers",
    "title",
    "legend",
    "rectangle143",
    "toggleShowHide5",
    "toggleShowHide13",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000",
    "week6",
    "week5",
    "week4",
    "week3",
    "week2",
    "week1",
    "group468",
    "legend3",
    "rectangle156",
    "toggleShowHide6",
    "toggleShowHide14",
    "legend2",
    "rectangle155",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161",
    "toggleShowHide7",
    "toggleShowHide15",
    "legend6",
    "rectangle159",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472",
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166",
    "toggleShowHide8",
    "toggleShowHide16",
    "logoHeader",
    "intercardLogoNoTagline",
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time"
  ],
  dashboardSettings: [
    "dashboardSettings",
    "frame509",
    "dashboardTitle",
    "close",
    "save",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle150",
    "overallSales2",
    "toggleShowHide",
    "toggleShowHide9",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle151",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "toggleShowHide2",
    "toggleShowHide10",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle152",
    "rectangle141",
    "percentOfTotalSales2",
    "toggleShowHide3",
    "toggleShowHide11",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle153",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "toggleShowHide4",
    "toggleShowHide12",
    "sixWeekGameTrend",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145",
    "bottomNumbers",
    "title",
    "legend",
    "rectangle143",
    "toggleShowHide5",
    "toggleShowHide13",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000",
    "week6",
    "week5",
    "week4",
    "week3",
    "week2",
    "week1",
    "group468",
    "legend3",
    "rectangle156",
    "toggleShowHide6",
    "toggleShowHide14",
    "legend2",
    "rectangle155",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161",
    "toggleShowHide7",
    "toggleShowHide15",
    "legend6",
    "rectangle159",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472",
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166",
    "toggleShowHide8",
    "toggleShowHide16",
    "logoHeader",
    "intercardLogoNoTagline",
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time"
  ],
  frame509: [
    "frame509",
    "dashboardTitle",
    "close",
    "save",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle150",
    "overallSales2",
    "toggleShowHide",
    "toggleShowHide9",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle151",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "toggleShowHide2",
    "toggleShowHide10",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle152",
    "rectangle141",
    "percentOfTotalSales2",
    "toggleShowHide3",
    "toggleShowHide11",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle153",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "toggleShowHide4",
    "toggleShowHide12",
    "sixWeekGameTrend",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145",
    "bottomNumbers",
    "title",
    "legend",
    "rectangle143",
    "toggleShowHide5",
    "toggleShowHide13",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000",
    "week6",
    "week5",
    "week4",
    "week3",
    "week2",
    "week1",
    "group468",
    "legend3",
    "rectangle156",
    "toggleShowHide6",
    "toggleShowHide14",
    "legend2",
    "rectangle155",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161",
    "toggleShowHide7",
    "toggleShowHide15",
    "legend6",
    "rectangle159",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472",
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166",
    "toggleShowHide8",
    "toggleShowHide16"
  ],
  dashboardTitle: ["dashboardTitle", "close", "save"],
  close: ["close"],
  save: ["save"],
  overallSales: [
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle150",
    "overallSales2",
    "toggleShowHide",
    "toggleShowHide9"
  ],
  group485: [
    "group485",
    "icon",
    "rectangle149",
    "rectangle150",
    "overallSales2",
    "toggleShowHide",
    "toggleShowHide9"
  ],
  icon: ["icon", "rectangle149", "rectangle150"],
  rectangle149: ["rectangle149"],
  rectangle150: ["rectangle150"],
  overallSales2: ["overallSales2"],
  toggleShowHide: ["toggleShowHide", "toggleShowHide9"],
  toggleShowHide9: ["toggleShowHide9"],
  totalRevenue: [
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle151",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "toggleShowHide2",
    "toggleShowHide10"
  ],
  group486: [
    "group486",
    "icon2",
    "rectangle151",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "toggleShowHide2",
    "toggleShowHide10"
  ],
  icon2: ["icon2", "rectangle151", "rectangle140"],
  rectangle151: ["rectangle151"],
  rectangle140: ["rectangle140"],
  totalRevenue2: ["totalRevenue2"],
  _99HigherThanThePreviousMonth: ["_99HigherThanThePreviousMonth"],
  toggleShowHide2: ["toggleShowHide2", "toggleShowHide10"],
  toggleShowHide10: ["toggleShowHide10"],
  percentOfTotalSales: [
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle152",
    "rectangle141",
    "percentOfTotalSales2",
    "toggleShowHide3",
    "toggleShowHide11"
  ],
  group487: [
    "group487",
    "icon3",
    "rectangle152",
    "rectangle141",
    "percentOfTotalSales2",
    "toggleShowHide3",
    "toggleShowHide11"
  ],
  icon3: ["icon3", "rectangle152", "rectangle141"],
  rectangle152: ["rectangle152"],
  rectangle141: ["rectangle141"],
  percentOfTotalSales2: ["percentOfTotalSales2"],
  toggleShowHide3: ["toggleShowHide3", "toggleShowHide11"],
  toggleShowHide11: ["toggleShowHide11"],
  totalRedemptionSales: [
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle153",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "toggleShowHide4",
    "toggleShowHide12"
  ],
  group488: [
    "group488",
    "icon4",
    "rectangle153",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "toggleShowHide4",
    "toggleShowHide12"
  ],
  icon4: ["icon4", "rectangle153", "rectangle142"],
  rectangle153: ["rectangle153"],
  rectangle142: ["rectangle142"],
  totalRedemptionSales2: ["totalRedemptionSales2"],
  _99HigherThanThePreviousMonth2: ["_99HigherThanThePreviousMonth2"],
  toggleShowHide4: ["toggleShowHide4", "toggleShowHide12"],
  toggleShowHide12: ["toggleShowHide12"],
  sixWeekGameTrend: [
    "sixWeekGameTrend",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145",
    "bottomNumbers",
    "title",
    "legend",
    "rectangle143",
    "toggleShowHide5",
    "toggleShowHide13"
  ],
  group380: [
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145",
    "bottomNumbers",
    "title",
    "legend",
    "rectangle143",
    "toggleShowHide5",
    "toggleShowHide13"
  ],
  bars: [
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle154",
    "rectangle145"
  ],
  rectangle144: ["rectangle144"],
  rectangle146: ["rectangle146"],
  rectangle148: ["rectangle148"],
  rectangle147: ["rectangle147"],
  rectangle154: ["rectangle154"],
  rectangle145: ["rectangle145"],
  bottomNumbers: ["bottomNumbers"],
  title: ["title", "legend", "rectangle143"],
  legend: ["legend", "rectangle143"],
  rectangle143: ["rectangle143"],
  toggleShowHide5: ["toggleShowHide5", "toggleShowHide13"],
  toggleShowHide13: ["toggleShowHide13"],
  gateAttraction: [
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000",
    "week6",
    "week5",
    "week4",
    "week3",
    "week2",
    "week1",
    "group468",
    "legend3",
    "rectangle156",
    "toggleShowHide6",
    "toggleShowHide14",
    "legend2",
    "rectangle155"
  ],
  group381: [
    "group381",
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000",
    "week6",
    "week5",
    "week4",
    "week3",
    "week2",
    "week1",
    "group468",
    "legend3",
    "rectangle156",
    "toggleShowHide6",
    "toggleShowHide14",
    "legend2",
    "rectangle155"
  ],
  bottomNumbers2: [
    "bottomNumbers2",
    "_0",
    "_200",
    "_400",
    "_600",
    "_800",
    "_1000"
  ],
  _0: ["_0"],
  _200: ["_200"],
  _400: ["_400"],
  _600: ["_600"],
  _800: ["_800"],
  _1000: ["_1000"],
  week6: ["week6"],
  week5: ["week5"],
  week4: ["week4"],
  week3: ["week3"],
  week2: ["week2"],
  week1: ["week1"],
  group468: ["group468", "legend3", "rectangle156"],
  legend3: ["legend3", "rectangle156"],
  rectangle156: ["rectangle156"],
  toggleShowHide6: ["toggleShowHide6", "toggleShowHide14"],
  toggleShowHide14: ["toggleShowHide14"],
  legend2: ["legend2", "rectangle155"],
  rectangle155: ["rectangle155"],
  location: [
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161",
    "toggleShowHide7",
    "toggleShowHide15",
    "legend6",
    "rectangle159"
  ],
  group474: [
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161",
    "toggleShowHide7",
    "toggleShowHide15",
    "legend6",
    "rectangle159"
  ],
  group469: [
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5"
  ],
  locPrice: [
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5"
  ],
  locationLable: ["locationLable"],
  locationLable2: ["locationLable2"],
  locationLable3: ["locationLable3"],
  locationLable4: ["locationLable4", "group479", "locationLable5"],
  group479: ["group479", "locationLable5"],
  locationLable5: ["locationLable5"],
  group259: [
    "group259",
    "legend4",
    "rectangle157",
    "legend5",
    "rectangle158",
    "legend7",
    "rectangle160",
    "legend8",
    "rectangle161"
  ],
  legend4: ["legend4", "rectangle157"],
  rectangle157: ["rectangle157"],
  legend5: ["legend5", "rectangle158"],
  rectangle158: ["rectangle158"],
  legend7: ["legend7", "rectangle160"],
  rectangle160: ["rectangle160"],
  legend8: ["legend8", "rectangle161"],
  rectangle161: ["rectangle161"],
  toggleShowHide7: ["toggleShowHide7", "toggleShowHide15"],
  toggleShowHide15: ["toggleShowHide15"],
  legend6: ["legend6", "rectangle159"],
  rectangle159: ["rectangle159"],
  packageDealIRevenueReport: [
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472",
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166",
    "toggleShowHide8",
    "toggleShowHide16"
  ],
  group473: [
    "group473",
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472",
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166",
    "toggleShowHide8",
    "toggleShowHide16"
  ],
  pie: [
    "pie",
    "location160800",
    "location237200",
    "location345400",
    "location431800",
    "group472"
  ],
  location160800: ["location160800"],
  location237200: ["location237200"],
  location345400: ["location345400"],
  location431800: ["location431800"],
  group472: ["group472"],
  frame474: [
    "frame474",
    "legend9",
    "rectangle162",
    "legend10",
    "rectangle163",
    "legend11",
    "rectangle164",
    "legend12",
    "rectangle165",
    "legend13",
    "rectangle166"
  ],
  legend9: ["legend9", "rectangle162"],
  rectangle162: ["rectangle162"],
  legend10: ["legend10", "rectangle163"],
  rectangle163: ["rectangle163"],
  legend11: ["legend11", "rectangle164"],
  rectangle164: ["rectangle164"],
  legend12: ["legend12", "rectangle165"],
  rectangle165: ["rectangle165"],
  legend13: ["legend13", "rectangle166"],
  rectangle166: ["rectangle166"],
  toggleShowHide8: ["toggleShowHide8", "toggleShowHide16"],
  toggleShowHide16: ["toggleShowHide16"],
  logoHeader: ["logoHeader", "intercardLogoNoTagline"],
  intercardLogoNoTagline: ["intercardLogoNoTagline"],
  statusBar: [
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time"
  ],
  symbols: ["symbols", "battery", "rectangle"],
  battery: ["battery", "rectangle"],
  rectangle: ["rectangle"],
  barsStatusTime: ["barsStatusTime", "time"],
  time: ["time"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  dashboardSettings: "div";
  frame509: "div";
  dashboardTitle: "div";
  close: "a";
  save: "a";
  overallSales: "div";
  group485: "div";
  icon: "div";
  rectangle149: "div";
  rectangle150: "div";
  overallSales2: "div";
  toggleShowHide: "div";
  toggleShowHide9: typeof Switch;
  totalRevenue: "div";
  group486: "div";
  icon2: "div";
  rectangle151: "div";
  rectangle140: "div";
  totalRevenue2: "div";
  _99HigherThanThePreviousMonth: "div";
  toggleShowHide2: "div";
  toggleShowHide10: typeof Switch;
  percentOfTotalSales: "div";
  group487: "div";
  icon3: "div";
  rectangle152: "div";
  rectangle141: "div";
  percentOfTotalSales2: "div";
  toggleShowHide3: "div";
  toggleShowHide11: typeof Switch;
  totalRedemptionSales: "div";
  group488: "div";
  icon4: "div";
  rectangle153: "div";
  rectangle142: "div";
  totalRedemptionSales2: "div";
  _99HigherThanThePreviousMonth2: "div";
  toggleShowHide4: "div";
  toggleShowHide12: typeof Switch;
  sixWeekGameTrend: "div";
  group380: "div";
  bars: "div";
  rectangle144: "div";
  rectangle146: "div";
  rectangle148: "div";
  rectangle147: "div";
  rectangle154: "div";
  rectangle145: "div";
  bottomNumbers: "div";
  title: "div";
  legend: "div";
  rectangle143: "div";
  toggleShowHide5: "div";
  toggleShowHide13: typeof Switch;
  gateAttraction: "div";
  group381: "div";
  bottomNumbers2: "div";
  _0: "div";
  _200: "div";
  _400: "div";
  _600: "div";
  _800: "div";
  _1000: "div";
  week6: "div";
  week5: "div";
  week4: "div";
  week3: "div";
  week2: "div";
  week1: "div";
  group468: "div";
  legend3: "div";
  rectangle156: "div";
  toggleShowHide6: "div";
  toggleShowHide14: typeof Switch;
  legend2: "div";
  rectangle155: "div";
  location: "div";
  group474: "div";
  group469: "div";
  locPrice: "div";
  locationLable: "div";
  locationLable2: "div";
  locationLable3: "div";
  locationLable4: "div";
  group479: "div";
  locationLable5: "div";
  group259: "div";
  legend4: "div";
  rectangle157: "div";
  legend5: "div";
  rectangle158: "div";
  legend7: "div";
  rectangle160: "div";
  legend8: "div";
  rectangle161: "div";
  toggleShowHide7: "div";
  toggleShowHide15: typeof Switch;
  legend6: "div";
  rectangle159: "div";
  packageDealIRevenueReport: "div";
  group473: "div";
  pie: "div";
  location160800: "div";
  location237200: "div";
  location345400: "div";
  location431800: "div";
  group472: "div";
  frame474: "div";
  legend9: "div";
  rectangle162: "div";
  legend10: "div";
  rectangle163: "div";
  legend11: "div";
  rectangle164: "div";
  legend12: "div";
  rectangle165: "div";
  legend13: "div";
  rectangle166: "div";
  toggleShowHide8: "div";
  toggleShowHide16: typeof Switch;
  logoHeader: "div";
  intercardLogoNoTagline: "div";
  statusBar: "div";
  symbols: "div";
  battery: "div";
  rectangle: "div";
  barsStatusTime: "div";
  time: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDashboardSettings__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDashboardSettings__VariantsArgs;
    args?: PlasmicDashboardSettings__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDashboardSettings__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDashboardSettings__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDashboardSettings__ArgProps,
          internalVariantPropNames: PlasmicDashboardSettings__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicDashboardSettings__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboardSettings";
  } else {
    func.displayName = `PlasmicDashboardSettings.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboardSettings = Object.assign(
  // Top-level PlasmicDashboardSettings renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    dashboardSettings: makeNodeComponent("dashboardSettings"),
    frame509: makeNodeComponent("frame509"),
    dashboardTitle: makeNodeComponent("dashboardTitle"),
    close: makeNodeComponent("close"),
    save: makeNodeComponent("save"),
    overallSales: makeNodeComponent("overallSales"),
    group485: makeNodeComponent("group485"),
    icon: makeNodeComponent("icon"),
    rectangle149: makeNodeComponent("rectangle149"),
    rectangle150: makeNodeComponent("rectangle150"),
    overallSales2: makeNodeComponent("overallSales2"),
    toggleShowHide: makeNodeComponent("toggleShowHide"),
    toggleShowHide9: makeNodeComponent("toggleShowHide9"),
    totalRevenue: makeNodeComponent("totalRevenue"),
    group486: makeNodeComponent("group486"),
    icon2: makeNodeComponent("icon2"),
    rectangle151: makeNodeComponent("rectangle151"),
    rectangle140: makeNodeComponent("rectangle140"),
    totalRevenue2: makeNodeComponent("totalRevenue2"),
    _99HigherThanThePreviousMonth: makeNodeComponent(
      "_99HigherThanThePreviousMonth"
    ),
    toggleShowHide2: makeNodeComponent("toggleShowHide2"),
    toggleShowHide10: makeNodeComponent("toggleShowHide10"),
    percentOfTotalSales: makeNodeComponent("percentOfTotalSales"),
    group487: makeNodeComponent("group487"),
    icon3: makeNodeComponent("icon3"),
    rectangle152: makeNodeComponent("rectangle152"),
    rectangle141: makeNodeComponent("rectangle141"),
    percentOfTotalSales2: makeNodeComponent("percentOfTotalSales2"),
    toggleShowHide3: makeNodeComponent("toggleShowHide3"),
    toggleShowHide11: makeNodeComponent("toggleShowHide11"),
    totalRedemptionSales: makeNodeComponent("totalRedemptionSales"),
    group488: makeNodeComponent("group488"),
    icon4: makeNodeComponent("icon4"),
    rectangle153: makeNodeComponent("rectangle153"),
    rectangle142: makeNodeComponent("rectangle142"),
    totalRedemptionSales2: makeNodeComponent("totalRedemptionSales2"),
    _99HigherThanThePreviousMonth2: makeNodeComponent(
      "_99HigherThanThePreviousMonth2"
    ),
    toggleShowHide4: makeNodeComponent("toggleShowHide4"),
    toggleShowHide12: makeNodeComponent("toggleShowHide12"),
    sixWeekGameTrend: makeNodeComponent("sixWeekGameTrend"),
    group380: makeNodeComponent("group380"),
    bars: makeNodeComponent("bars"),
    rectangle144: makeNodeComponent("rectangle144"),
    rectangle146: makeNodeComponent("rectangle146"),
    rectangle148: makeNodeComponent("rectangle148"),
    rectangle147: makeNodeComponent("rectangle147"),
    rectangle154: makeNodeComponent("rectangle154"),
    rectangle145: makeNodeComponent("rectangle145"),
    bottomNumbers: makeNodeComponent("bottomNumbers"),
    title: makeNodeComponent("title"),
    legend: makeNodeComponent("legend"),
    rectangle143: makeNodeComponent("rectangle143"),
    toggleShowHide5: makeNodeComponent("toggleShowHide5"),
    toggleShowHide13: makeNodeComponent("toggleShowHide13"),
    gateAttraction: makeNodeComponent("gateAttraction"),
    group381: makeNodeComponent("group381"),
    bottomNumbers2: makeNodeComponent("bottomNumbers2"),
    _0: makeNodeComponent("_0"),
    _200: makeNodeComponent("_200"),
    _400: makeNodeComponent("_400"),
    _600: makeNodeComponent("_600"),
    _800: makeNodeComponent("_800"),
    _1000: makeNodeComponent("_1000"),
    week6: makeNodeComponent("week6"),
    week5: makeNodeComponent("week5"),
    week4: makeNodeComponent("week4"),
    week3: makeNodeComponent("week3"),
    week2: makeNodeComponent("week2"),
    week1: makeNodeComponent("week1"),
    group468: makeNodeComponent("group468"),
    legend3: makeNodeComponent("legend3"),
    rectangle156: makeNodeComponent("rectangle156"),
    toggleShowHide6: makeNodeComponent("toggleShowHide6"),
    toggleShowHide14: makeNodeComponent("toggleShowHide14"),
    legend2: makeNodeComponent("legend2"),
    rectangle155: makeNodeComponent("rectangle155"),
    location: makeNodeComponent("location"),
    group474: makeNodeComponent("group474"),
    group469: makeNodeComponent("group469"),
    locPrice: makeNodeComponent("locPrice"),
    locationLable: makeNodeComponent("locationLable"),
    locationLable2: makeNodeComponent("locationLable2"),
    locationLable3: makeNodeComponent("locationLable3"),
    locationLable4: makeNodeComponent("locationLable4"),
    group479: makeNodeComponent("group479"),
    locationLable5: makeNodeComponent("locationLable5"),
    group259: makeNodeComponent("group259"),
    legend4: makeNodeComponent("legend4"),
    rectangle157: makeNodeComponent("rectangle157"),
    legend5: makeNodeComponent("legend5"),
    rectangle158: makeNodeComponent("rectangle158"),
    legend7: makeNodeComponent("legend7"),
    rectangle160: makeNodeComponent("rectangle160"),
    legend8: makeNodeComponent("legend8"),
    rectangle161: makeNodeComponent("rectangle161"),
    toggleShowHide7: makeNodeComponent("toggleShowHide7"),
    toggleShowHide15: makeNodeComponent("toggleShowHide15"),
    legend6: makeNodeComponent("legend6"),
    rectangle159: makeNodeComponent("rectangle159"),
    packageDealIRevenueReport: makeNodeComponent("packageDealIRevenueReport"),
    group473: makeNodeComponent("group473"),
    pie: makeNodeComponent("pie"),
    location160800: makeNodeComponent("location160800"),
    location237200: makeNodeComponent("location237200"),
    location345400: makeNodeComponent("location345400"),
    location431800: makeNodeComponent("location431800"),
    group472: makeNodeComponent("group472"),
    frame474: makeNodeComponent("frame474"),
    legend9: makeNodeComponent("legend9"),
    rectangle162: makeNodeComponent("rectangle162"),
    legend10: makeNodeComponent("legend10"),
    rectangle163: makeNodeComponent("rectangle163"),
    legend11: makeNodeComponent("legend11"),
    rectangle164: makeNodeComponent("rectangle164"),
    legend12: makeNodeComponent("legend12"),
    rectangle165: makeNodeComponent("rectangle165"),
    legend13: makeNodeComponent("legend13"),
    rectangle166: makeNodeComponent("rectangle166"),
    toggleShowHide8: makeNodeComponent("toggleShowHide8"),
    toggleShowHide16: makeNodeComponent("toggleShowHide16"),
    logoHeader: makeNodeComponent("logoHeader"),
    intercardLogoNoTagline: makeNodeComponent("intercardLogoNoTagline"),
    statusBar: makeNodeComponent("statusBar"),
    symbols: makeNodeComponent("symbols"),
    battery: makeNodeComponent("battery"),
    rectangle: makeNodeComponent("rectangle"),
    barsStatusTime: makeNodeComponent("barsStatusTime"),
    time: makeNodeComponent("time"),

    // Metadata about props expected for PlasmicDashboardSettings
    internalVariantProps: PlasmicDashboardSettings__VariantProps,
    internalArgProps: PlasmicDashboardSettings__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDashboardSettings;
/* prettier-ignore-end */
