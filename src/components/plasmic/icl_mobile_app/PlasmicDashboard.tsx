// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: e3ViewYvztDa9TzbxJa8p5
// Component: NtTkU8G_7b
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_icl_mobile_app.module.css"; // plasmic-import: e3ViewYvztDa9TzbxJa8p5/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: NtTkU8G_7b/css

import IconCogIcon from "./icons/PlasmicIcon__IconCog"; // plasmic-import: ocZc0zJD4e/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: PM2w0MNFGO/icon
import SideBarBg6Icon from "./icons/PlasmicIcon__SideBarBg6"; // plasmic-import: wax6YZN9L/icon
import SideBarBg7Icon from "./icons/PlasmicIcon__SideBarBg7"; // plasmic-import: At0jYymHqD/icon
import SideBarBg8Icon from "./icons/PlasmicIcon__SideBarBg8"; // plasmic-import: xHzWu7ZjeM/icon
import SideBarBg9Icon from "./icons/PlasmicIcon__SideBarBg9"; // plasmic-import: yk9iqqSFTw/icon
import Vector10Icon from "./icons/PlasmicIcon__Vector10"; // plasmic-import: HfvRcbk1TR3/icon
import Vector11Icon from "./icons/PlasmicIcon__Vector11"; // plasmic-import: 7HuyzapV0Z1/icon
import Vector12Icon from "./icons/PlasmicIcon__Vector12"; // plasmic-import: sZCOU1rWnkY/icon
import Ellipse23Icon from "./icons/PlasmicIcon__Ellipse23"; // plasmic-import: -60hDGLEU_f/icon
import Ellipse21Icon from "./icons/PlasmicIcon__Ellipse21"; // plasmic-import: hJzbctQmhPt/icon
import Ellipse20Icon from "./icons/PlasmicIcon__Ellipse20"; // plasmic-import: eRi4tVAczFI/icon
import Ellipse19Icon from "./icons/PlasmicIcon__Ellipse19"; // plasmic-import: wPRY1tp8BEb/icon
import Ellipse17Icon from "./icons/PlasmicIcon__Ellipse17"; // plasmic-import: Io20_rGhpBS/icon
import Ellipse16Icon from "./icons/PlasmicIcon__Ellipse16"; // plasmic-import: gDHZvE4LFvE/icon
import Ellipse18Icon from "./icons/PlasmicIcon__Ellipse18"; // plasmic-import: hfGB16EmxaC/icon
import Vector13Icon from "./icons/PlasmicIcon__Vector13"; // plasmic-import: pvkIxK8J8hH/icon
import RectangleIcon from "./icons/PlasmicIcon__Rectangle"; // plasmic-import: UONN3UL-uo/icon
import CombinedShapeIcon from "./icons/PlasmicIcon__CombinedShape"; // plasmic-import: AJySRDgPsS/icon
import WiFiIcon from "./icons/PlasmicIcon__WiFi"; // plasmic-import: Yckalna_0K/icon
import SideBarBg5Icon from "./icons/PlasmicIcon__SideBarBg5"; // plasmic-import: bbaUeGde-p8/icon
import IconMenuIcon from "./icons/PlasmicIcon__IconMenu"; // plasmic-import: YA9Hw7S8ZRq/icon
import bg5GWkmvOo9Ld from "./images/bg5.svg"; // plasmic-import: GWkmvOO9LD/picture
import bg6WtUNrRy0 from "./images/bg6.svg"; // plasmic-import: WT-uNRRy_0/picture
import bg73VzUSh9TU from "./images/bg7.svg"; // plasmic-import: 3VzUSh9T_U/picture
import bg8SUiXnDlvxO from "./images/bg8.svg"; // plasmic-import: sUiXnDlvxO/picture
import horizontalLineI33KuXqk5B from "./images/horizontalLine.svg"; // plasmic-import: i33kuXqk5B/picture
import verticalLineISr65F7Kv9F from "./images/verticalLine.svg"; // plasmic-import: iSr65F7KV9F/picture
import horizontalLine2N6DThOnPl from "./images/horizontalLine2.svg"; // plasmic-import: n6d__THOnPl/picture
import verticalLine2QhYgMvtJqzq from "./images/verticalLine2.svg"; // plasmic-import: qhYgMvtJqzq/picture
import line3TzPZo1Big from "./images/line3.svg"; // plasmic-import: tzP-ZO1Big/picture
import line4TgNtC9ApQc from "./images/line4.svg"; // plasmic-import: TGNtC9ApQc/picture
import halfPie2G15Fp11UV from "./images/halfPie2.svg"; // plasmic-import: g15Fp11U-V/picture
import ellipse24Uww0GiJsFg from "./images/ellipse24.svg"; // plasmic-import: uww0GiJsFG/picture

export type PlasmicDashboard__VariantMembers = {};
export type PlasmicDashboard__VariantsArgs = {};
type VariantPropType = keyof PlasmicDashboard__VariantsArgs;
export const PlasmicDashboard__VariantProps = new Array<VariantPropType>();

export type PlasmicDashboard__ArgsType = {};
type ArgPropType = keyof PlasmicDashboard__ArgsType;
export const PlasmicDashboard__ArgProps = new Array<ArgPropType>();

export type PlasmicDashboard__OverridesType = {
  root?: p.Flex<"div">;
  dashboardV2?: p.Flex<"div">;
  frame496?: p.Flex<"div">;
  frame475?: p.Flex<"div">;
  dashboardTitle?: p.Flex<"div">;
  rectangle150?: p.Flex<"div">;
  dashboardSettings?: p.Flex<"a">;
  rectangle97?: p.Flex<"div">;
  frame488?: p.Flex<"div">;
  setDateRange?: p.Flex<"div">;
  rectangle67?: p.Flex<"div">;
  discountDropdown?: p.Flex<"div">;
  rectangle58?: p.Flex<"div">;
  overallSales?: p.Flex<"div">;
  group485?: p.Flex<"div">;
  icon?: p.Flex<"div">;
  rectangle149?: p.Flex<"div">;
  rectangle151?: p.Flex<"div">;
  overallSales2?: p.Flex<"div">;
  totalRevenue?: p.Flex<"div">;
  group486?: p.Flex<"div">;
  icon2?: p.Flex<"div">;
  rectangle152?: p.Flex<"div">;
  rectangle140?: p.Flex<"div">;
  totalRevenue2?: p.Flex<"div">;
  _99HigherThanThePreviousMonth?: p.Flex<"div">;
  percentOfTotalSales?: p.Flex<"div">;
  group487?: p.Flex<"div">;
  icon3?: p.Flex<"div">;
  rectangle153?: p.Flex<"div">;
  rectangle141?: p.Flex<"div">;
  percentOfTotalSales2?: p.Flex<"div">;
  totalRedemptionSales?: p.Flex<"div">;
  group488?: p.Flex<"div">;
  icon4?: p.Flex<"div">;
  rectangle154?: p.Flex<"div">;
  rectangle142?: p.Flex<"div">;
  totalRedemptionSales2?: p.Flex<"div">;
  _99HigherThanThePreviousMonth2?: p.Flex<"div">;
  sixWeekGameTrend?: p.Flex<"div">;
  group470?: p.Flex<"div">;
  legend?: p.Flex<"div">;
  rectangle143?: p.Flex<"div">;
  group380?: p.Flex<"div">;
  bars?: p.Flex<"div">;
  rectangle144?: p.Flex<"div">;
  rectangle146?: p.Flex<"div">;
  rectangle148?: p.Flex<"div">;
  rectangle147?: p.Flex<"div">;
  rectangle155?: p.Flex<"div">;
  rectangle145?: p.Flex<"div">;
  bottomNumbers?: p.Flex<"div">;
  gateAttraction?: p.Flex<"div">;
  group381?: p.Flex<"div">;
  bottomNumbers2?: p.Flex<"div">;
  group468?: p.Flex<"div">;
  legend2?: p.Flex<"div">;
  rectangle156?: p.Flex<"div">;
  legend3?: p.Flex<"div">;
  rectangle157?: p.Flex<"div">;
  location?: p.Flex<"div">;
  group474?: p.Flex<"div">;
  group469?: p.Flex<"div">;
  locPrice?: p.Flex<"div">;
  locationLable?: p.Flex<"div">;
  locationLable2?: p.Flex<"div">;
  locationLable3?: p.Flex<"div">;
  locationLable4?: p.Flex<"div">;
  group479?: p.Flex<"div">;
  locationLable5?: p.Flex<"div">;
  group259?: p.Flex<"div">;
  legend4?: p.Flex<"div">;
  rectangle158?: p.Flex<"div">;
  legend5?: p.Flex<"div">;
  rectangle159?: p.Flex<"div">;
  legend7?: p.Flex<"div">;
  rectangle161?: p.Flex<"div">;
  legend8?: p.Flex<"div">;
  rectangle162?: p.Flex<"div">;
  legend6?: p.Flex<"div">;
  rectangle160?: p.Flex<"div">;
  packageDealIRevenueReport?: p.Flex<"div">;
  group473?: p.Flex<"div">;
  pie?: p.Flex<"div">;
  location160800?: p.Flex<"div">;
  frame474?: p.Flex<"div">;
  legend9?: p.Flex<"div">;
  rectangle163?: p.Flex<"div">;
  legend10?: p.Flex<"div">;
  rectangle164?: p.Flex<"div">;
  legend11?: p.Flex<"div">;
  rectangle165?: p.Flex<"div">;
  legend12?: p.Flex<"div">;
  rectangle166?: p.Flex<"div">;
  legend13?: p.Flex<"div">;
  rectangle167?: p.Flex<"div">;
  group472?: p.Flex<"div">;
  statusBar?: p.Flex<"div">;
  symbols?: p.Flex<"div">;
  battery?: p.Flex<"div">;
  rectangle?: p.Flex<"div">;
  barsStatusTime?: p.Flex<"div">;
  time?: p.Flex<"div">;
  logoHeader?: p.Flex<"div">;
  intercardLogoNoTagline?: p.Flex<"div">;
  link?: p.Flex<"a">;
};

export interface DefaultDashboardProps {
  className?: string;
}

function PlasmicDashboard__RenderFunc(props: {
  variants: PlasmicDashboard__VariantsArgs;
  args: PlasmicDashboard__ArgsType;
  overrides: PlasmicDashboard__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  return (
    <React.Fragment>
      {}

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          sty.root
        )}
      >
        {true ? (
          <div
            data-plasmic-name={"dashboardV2"}
            data-plasmic-override={overrides.dashboardV2}
            className={classNames(projectcss.all, sty.dashboardV2)}
          >
            <div
              data-plasmic-name={"frame496"}
              data-plasmic-override={overrides.frame496}
              className={classNames(projectcss.all, sty.frame496)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame475"}
                data-plasmic-override={overrides.frame475}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame475)}
              >
                <div
                  data-plasmic-name={"dashboardTitle"}
                  data-plasmic-override={overrides.dashboardTitle}
                  className={classNames(projectcss.all, sty.dashboardTitle)}
                >
                  <div
                    data-plasmic-name={"rectangle150"}
                    data-plasmic-override={overrides.rectangle150}
                    className={classNames(projectcss.all, sty.rectangle150)}
                  />

                  <a
                    data-plasmic-name={"dashboardSettings"}
                    data-plasmic-override={overrides.dashboardSettings}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.dashboardSettings,
                      "dbsettings" as const
                    )}
                    href={`/new-page-2`}
                    title={"" as const}
                  >
                    <div
                      data-plasmic-name={"rectangle97"}
                      data-plasmic-override={overrides.rectangle97}
                      className={classNames(projectcss.all, sty.rectangle97)}
                    />

                    <IconCogIcon
                      className={classNames(projectcss.all, sty.svg__avON)}
                      role={"img"}
                    />
                  </a>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zadC
                    )}
                  >
                    {"DASHBOARD"}
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"frame488"}
                  data-plasmic-override={overrides.frame488}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame488)}
                >
                  <div
                    data-plasmic-name={"setDateRange"}
                    data-plasmic-override={overrides.setDateRange}
                    className={classNames(projectcss.all, sty.setDateRange)}
                  >
                    <div
                      data-plasmic-name={"rectangle67"}
                      data-plasmic-override={overrides.rectangle67}
                      className={classNames(projectcss.all, sty.rectangle67)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sqekl
                      )}
                    >
                      {"10/04/2022 - 10/04/2022"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hsDa2
                      )}
                    >
                      {"Set Date Range"}
                    </div>

                    <div
                      data-plasmic-name={"discountDropdown"}
                      data-plasmic-override={overrides.discountDropdown}
                      className={classNames(
                        projectcss.all,
                        sty.discountDropdown
                      )}
                    >
                      <div
                        data-plasmic-name={"rectangle58"}
                        data-plasmic-override={overrides.rectangle58}
                        className={classNames(projectcss.all, sty.rectangle58)}
                      />

                      <Vector2Icon
                        className={classNames(projectcss.all, sty.svg__fI9F)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"overallSales"}
                  data-plasmic-override={overrides.overallSales}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.overallSales)}
                >
                  {false ? (
                    <SideBarBg6Icon
                      className={classNames(projectcss.all, sty.svg___6M2K4)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    data-plasmic-name={"group485"}
                    data-plasmic-override={overrides.group485}
                    className={classNames(projectcss.all, sty.group485)}
                  >
                    <div
                      data-plasmic-name={"icon"}
                      data-plasmic-override={overrides.icon}
                      className={classNames(projectcss.all, sty.icon)}
                    >
                      <div
                        data-plasmic-name={"rectangle149"}
                        data-plasmic-override={overrides.rectangle149}
                        className={classNames(projectcss.all, sty.rectangle149)}
                      />

                      <div
                        data-plasmic-name={"rectangle151"}
                        data-plasmic-override={overrides.rectangle151}
                        className={classNames(projectcss.all, sty.rectangle151)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"overallSales2"}
                      data-plasmic-override={overrides.overallSales2}
                      className={classNames(projectcss.all, sty.overallSales2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nXExB
                        )}
                      >
                        {"Overall Sales"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ryQwc
                      )}
                    >
                      {"$999,999.99"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cpX9Y
                      )}
                    >
                      {"99% higher than the previous month"}
                    </div>
                  </div>

                  {false ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__vfrZm)}
                      displayHeight={"24.183px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"181.568px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: bg5GWkmvOo9Ld,
                        fullWidth: 181.568,
                        fullHeight: 24.183,
                        aspectRatio: 7.28
                      }}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"totalRevenue"}
                  data-plasmic-override={overrides.totalRevenue}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.totalRevenue)}
                >
                  {false ? (
                    <SideBarBg7Icon
                      className={classNames(projectcss.all, sty.svg__dvGzv)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    data-plasmic-name={"group486"}
                    data-plasmic-override={overrides.group486}
                    className={classNames(projectcss.all, sty.group486)}
                  >
                    <div
                      data-plasmic-name={"icon2"}
                      data-plasmic-override={overrides.icon2}
                      className={classNames(projectcss.all, sty.icon2)}
                    >
                      <div
                        data-plasmic-name={"rectangle152"}
                        data-plasmic-override={overrides.rectangle152}
                        className={classNames(projectcss.all, sty.rectangle152)}
                      />

                      <div
                        data-plasmic-name={"rectangle140"}
                        data-plasmic-override={overrides.rectangle140}
                        className={classNames(projectcss.all, sty.rectangle140)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"totalRevenue2"}
                      data-plasmic-override={overrides.totalRevenue2}
                      className={classNames(projectcss.all, sty.totalRevenue2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kshkp
                        )}
                      >
                        {"Total Revenue"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o2Znw
                      )}
                    >
                      {"$77,239.90"}
                    </div>

                    <div
                      data-plasmic-name={"_99HigherThanThePreviousMonth"}
                      data-plasmic-override={
                        overrides._99HigherThanThePreviousMonth
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty._99HigherThanThePreviousMonth
                      )}
                    >
                      {"50% lower than the previous month"}
                    </div>
                  </div>

                  {false ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__w8AZr)}
                      displayHeight={"24.183px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"181.568px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: bg6WtUNrRy0,
                        fullWidth: 181.568,
                        fullHeight: 24.183,
                        aspectRatio: 7.28
                      }}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"percentOfTotalSales"}
                  data-plasmic-override={overrides.percentOfTotalSales}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.percentOfTotalSales
                  )}
                >
                  {false ? (
                    <SideBarBg8Icon
                      className={classNames(projectcss.all, sty.svg__xbkrp)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    data-plasmic-name={"group487"}
                    data-plasmic-override={overrides.group487}
                    className={classNames(projectcss.all, sty.group487)}
                  >
                    <div
                      data-plasmic-name={"icon3"}
                      data-plasmic-override={overrides.icon3}
                      className={classNames(projectcss.all, sty.icon3)}
                    >
                      <div
                        data-plasmic-name={"rectangle153"}
                        data-plasmic-override={overrides.rectangle153}
                        className={classNames(projectcss.all, sty.rectangle153)}
                      />

                      <div
                        data-plasmic-name={"rectangle141"}
                        data-plasmic-override={overrides.rectangle141}
                        className={classNames(projectcss.all, sty.rectangle141)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"percentOfTotalSales2"}
                      data-plasmic-override={overrides.percentOfTotalSales2}
                      className={classNames(
                        projectcss.all,
                        sty.percentOfTotalSales2
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xXd2L
                        )}
                      >
                        {"Percent of Total Sales"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tRrUs
                      )}
                    >
                      {"99.99%"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iyy
                      )}
                    >
                      {"99% higher than the previous month"}
                    </div>
                  </div>

                  {false ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___3EcR)}
                      displayHeight={"24.183px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"181.568px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: bg73VzUSh9TU,
                        fullWidth: 181.568,
                        fullHeight: 24.183,
                        aspectRatio: 7.28
                      }}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"totalRedemptionSales"}
                  data-plasmic-override={overrides.totalRedemptionSales}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.totalRedemptionSales
                  )}
                >
                  {false ? (
                    <SideBarBg9Icon
                      className={classNames(projectcss.all, sty.svg__t5Zw6)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    data-plasmic-name={"group488"}
                    data-plasmic-override={overrides.group488}
                    className={classNames(projectcss.all, sty.group488)}
                  >
                    <div
                      data-plasmic-name={"icon4"}
                      data-plasmic-override={overrides.icon4}
                      className={classNames(projectcss.all, sty.icon4)}
                    >
                      <div
                        data-plasmic-name={"rectangle154"}
                        data-plasmic-override={overrides.rectangle154}
                        className={classNames(projectcss.all, sty.rectangle154)}
                      />

                      <div
                        data-plasmic-name={"rectangle142"}
                        data-plasmic-override={overrides.rectangle142}
                        className={classNames(projectcss.all, sty.rectangle142)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"totalRedemptionSales2"}
                      data-plasmic-override={overrides.totalRedemptionSales2}
                      className={classNames(
                        projectcss.all,
                        sty.totalRedemptionSales2
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rPYbb
                        )}
                      >
                        {"Total Redemption Sales"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oiFjV
                      )}
                    >
                      {"$987,654.32"}
                    </div>

                    <div
                      data-plasmic-name={"_99HigherThanThePreviousMonth2"}
                      data-plasmic-override={
                        overrides._99HigherThanThePreviousMonth2
                      }
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty._99HigherThanThePreviousMonth2
                      )}
                    >
                      {"50% lower than the previous month"}
                    </div>
                  </div>

                  {false ? (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__nlpB)}
                      displayHeight={"24.183px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"181.568px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: bg8SUiXnDlvxO,
                        fullWidth: 181.568,
                        fullHeight: 24.183,
                        aspectRatio: 7.28
                      }}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"sixWeekGameTrend"}
                  data-plasmic-override={overrides.sixWeekGameTrend}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.sixWeekGameTrend)}
                >
                  <div
                    data-plasmic-name={"group470"}
                    data-plasmic-override={overrides.group470}
                    className={classNames(projectcss.all, sty.group470)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"legend"}
                      data-plasmic-override={overrides.legend}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.legend)}
                    >
                      <div
                        data-plasmic-name={"rectangle143"}
                        data-plasmic-override={overrides.rectangle143}
                        className={classNames(projectcss.all, sty.rectangle143)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hh0Yp
                        )}
                      >
                        {"Sales"}
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lq9Du
                      )}
                    >
                      {"SIX WEEK GAME TREND"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"group380"}
                    data-plasmic-override={overrides.group380}
                    className={classNames(projectcss.all, sty.group380)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__tdc4F)}
                      displayHeight={"195.092px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"261.605px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: horizontalLineI33KuXqk5B,
                        fullWidth: 261.605,
                        fullHeight: 195.092,
                        aspectRatio: 1.323232
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___5ETIn)}
                      displayHeight={"256.013px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"198.049px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: verticalLineISr65F7Kv9F,
                        fullWidth: 198.049,
                        fullHeight: 256.013,
                        aspectRatio: 0.771318
                      }}
                    />

                    <div
                      data-plasmic-name={"bars"}
                      data-plasmic-override={overrides.bars}
                      className={classNames(projectcss.all, sty.bars)}
                    >
                      <div
                        data-plasmic-name={"rectangle144"}
                        data-plasmic-override={overrides.rectangle144}
                        className={classNames(projectcss.all, sty.rectangle144)}
                      />

                      <div
                        data-plasmic-name={"rectangle146"}
                        data-plasmic-override={overrides.rectangle146}
                        className={classNames(projectcss.all, sty.rectangle146)}
                      />

                      <div
                        data-plasmic-name={"rectangle148"}
                        data-plasmic-override={overrides.rectangle148}
                        className={classNames(projectcss.all, sty.rectangle148)}
                      />

                      <div
                        data-plasmic-name={"rectangle147"}
                        data-plasmic-override={overrides.rectangle147}
                        className={classNames(projectcss.all, sty.rectangle147)}
                      />

                      <div
                        data-plasmic-name={"rectangle155"}
                        data-plasmic-override={overrides.rectangle155}
                        className={classNames(projectcss.all, sty.rectangle155)}
                      />

                      <div
                        data-plasmic-name={"rectangle145"}
                        data-plasmic-override={overrides.rectangle145}
                        className={classNames(projectcss.all, sty.rectangle145)}
                      />
                    </div>

                    <div
                      data-plasmic-name={"bottomNumbers"}
                      data-plasmic-override={overrides.bottomNumbers}
                      className={classNames(projectcss.all, sty.bottomNumbers)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hkegY
                        )}
                      >
                        {"0"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ktniM
                        )}
                      >
                        {"200"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rPrnz
                        )}
                      >
                        {"400"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hQ6Mr
                        )}
                      >
                        {"600"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h7Nwb
                        )}
                      >
                        {"800"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0Hril
                        )}
                      >
                        {"1000"}
                      </div>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yy8H8
                      )}
                    >
                      {"Week 6"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tlZrb
                      )}
                    >
                      {"Week 5"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eTlA
                      )}
                    >
                      {"Week 4"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dQE3
                      )}
                    >
                      {"Week 3"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fs9M
                      )}
                    >
                      {"Week 2"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ac9J
                      )}
                    >
                      {"Week 1"}
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"gateAttraction"}
                  data-plasmic-override={overrides.gateAttraction}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.gateAttraction)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dZowK
                    )}
                  >
                    {"GATE / ATTRACTION REVENUE"}
                  </div>

                  <div
                    data-plasmic-name={"group381"}
                    data-plasmic-override={overrides.group381}
                    className={classNames(projectcss.all, sty.group381)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__j7QCh)}
                      displayHeight={"149.745px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"265.665px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: horizontalLine2N6DThOnPl,
                        fullWidth: 265.665,
                        fullHeight: 149.745,
                        aspectRatio: 1.75
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___7DmYz)}
                      displayHeight={"263.55px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"152.241px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: verticalLine2QhYgMvtJqzq,
                        fullWidth: 152.241,
                        fullHeight: 263.55,
                        aspectRatio: 0.577358
                      }}
                    />

                    <div
                      data-plasmic-name={"bottomNumbers2"}
                      data-plasmic-override={overrides.bottomNumbers2}
                      className={classNames(projectcss.all, sty.bottomNumbers2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fAio2
                        )}
                      >
                        {"0"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9MCt
                        )}
                      >
                        {"200"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4XfOv
                        )}
                      >
                        {"400"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0AfQw
                        )}
                      >
                        {"600"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__q2JxQ
                        )}
                      >
                        {"800"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mw4Th
                        )}
                      >
                        {"1000"}
                      </div>
                    </div>

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___9PFz)}
                      displayHeight={"106.818px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"219.131px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: line3TzPZo1Big,
                        fullWidth: 219.131,
                        fullHeight: 106.818,
                        aspectRatio: 2.056075
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lK4Ha)}
                      displayHeight={"77.368px" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"219.131px" as const}
                      loading={"lazy" as const}
                      src={{
                        src: line4TgNtC9ApQc,
                        fullWidth: 219.131,
                        fullHeight: 77.368,
                        aspectRatio: 2.820513
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m2ROb
                      )}
                    >
                      {"Week 6"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qBe
                      )}
                    >
                      {"Week 5"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d6Lb0
                      )}
                    >
                      {"Week 4"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jhVu
                      )}
                    >
                      {"Week 3"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kNZq
                      )}
                    >
                      {"Week 2"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uZh9D
                      )}
                    >
                      {"Week 1"}
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"group468"}
                    data-plasmic-override={overrides.group468}
                    className={classNames(projectcss.all, sty.group468)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"legend2"}
                      data-plasmic-override={overrides.legend2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.legend2)}
                    >
                      <div
                        data-plasmic-name={"rectangle156"}
                        data-plasmic-override={overrides.rectangle156}
                        className={classNames(projectcss.all, sty.rectangle156)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zbtN0
                        )}
                      >
                        {"Sold at the Gate"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"legend3"}
                      data-plasmic-override={overrides.legend3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.legend3)}
                    >
                      <div
                        data-plasmic-name={"rectangle157"}
                        data-plasmic-override={overrides.rectangle157}
                        className={classNames(projectcss.all, sty.rectangle157)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e04Vn
                        )}
                      >
                        {"Sold at the POS"}
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"location"}
                  data-plasmic-override={overrides.location}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.location)}
                >
                  <div
                    data-plasmic-name={"group474"}
                    data-plasmic-override={overrides.group474}
                    className={classNames(projectcss.all, sty.group474)}
                  >
                    <div
                      data-plasmic-name={"group469"}
                      data-plasmic-override={overrides.group469}
                      className={classNames(projectcss.all, sty.group469)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__ojoYo)}
                        displayHeight={"104.971px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"209.943px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: halfPie2G15Fp11UV,
                          fullWidth: 209.943,
                          fullHeight: 104.971,
                          aspectRatio: 1.813953
                        }}
                      />

                      <div
                        data-plasmic-name={"locPrice"}
                        data-plasmic-override={overrides.locPrice}
                        className={classNames(projectcss.all, sty.locPrice)}
                      >
                        <div
                          data-plasmic-name={"locationLable"}
                          data-plasmic-override={overrides.locationLable}
                          className={classNames(
                            projectcss.all,
                            sty.locationLable
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sifhC
                            )}
                          >
                            {"Location 5\n$111.00"}
                          </div>

                          <Vector10Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fOs1W
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          data-plasmic-name={"locationLable2"}
                          data-plasmic-override={overrides.locationLable2}
                          className={classNames(
                            projectcss.all,
                            sty.locationLable2
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5Yt7Y
                            )}
                          >
                            {"Location 4\n$318.00"}
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"locationLable3"}
                          data-plasmic-override={overrides.locationLable3}
                          className={classNames(
                            projectcss.all,
                            sty.locationLable3
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bTxr
                            )}
                          >
                            {"Location 2\n$318.00"}
                          </div>

                          <Vector11Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rnxkf
                            )}
                            role={"img"}
                          />
                        </div>

                        <div
                          data-plasmic-name={"locationLable4"}
                          data-plasmic-override={overrides.locationLable4}
                          className={classNames(
                            projectcss.all,
                            sty.locationLable4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bVwv4
                            )}
                          >
                            {"Location 3\n$318.00"}
                          </div>

                          <Vector12Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bdeUq
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"group479"}
                            data-plasmic-override={overrides.group479}
                            className={classNames(projectcss.all, sty.group479)}
                          >
                            <div
                              data-plasmic-name={"locationLable5"}
                              data-plasmic-override={overrides.locationLable5}
                              className={classNames(
                                projectcss.all,
                                sty.locationLable5
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nbsY6
                                )}
                              >
                                {"Location 5\n$111.00"}
                              </div>
                            </div>

                            <Vector12Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cG1Me
                              )}
                              role={"img"}
                            />
                          </div>

                          <Vector11Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__biYt
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"group259"}
                      data-plasmic-override={overrides.group259}
                      className={classNames(projectcss.all, sty.group259)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend4"}
                        data-plasmic-override={overrides.legend4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend4)}
                      >
                        <div
                          data-plasmic-name={"rectangle158"}
                          data-plasmic-override={overrides.rectangle158}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle158
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___13TsP
                          )}
                        >
                          {"Location 1"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend5"}
                        data-plasmic-override={overrides.legend5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend5)}
                      >
                        <div
                          data-plasmic-name={"rectangle159"}
                          data-plasmic-override={overrides.rectangle159}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle159
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nBbQb
                          )}
                        >
                          {"Location 2"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend7"}
                        data-plasmic-override={overrides.legend7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend7)}
                      >
                        <div
                          data-plasmic-name={"rectangle161"}
                          data-plasmic-override={overrides.rectangle161}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle161
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__v2D
                          )}
                        >
                          {"Location 4"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend8"}
                        data-plasmic-override={overrides.legend8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend8)}
                      >
                        <div
                          data-plasmic-name={"rectangle162"}
                          data-plasmic-override={overrides.rectangle162}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle162
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iUegu
                          )}
                        >
                          {"Location 5"}
                        </div>
                      </p.Stack>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hGg72
                      )}
                    >
                      {"LOCATIONS"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"legend6"}
                      data-plasmic-override={overrides.legend6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.legend6)}
                    >
                      <div
                        data-plasmic-name={"rectangle160"}
                        data-plasmic-override={overrides.rectangle160}
                        className={classNames(projectcss.all, sty.rectangle160)}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__huogh
                        )}
                      >
                        {"Location 3"}
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"packageDealIRevenueReport"}
                  data-plasmic-override={overrides.packageDealIRevenueReport}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.packageDealIRevenueReport
                  )}
                >
                  <div
                    data-plasmic-name={"group473"}
                    data-plasmic-override={overrides.group473}
                    className={classNames(projectcss.all, sty.group473)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__urjSs
                      )}
                    >
                      {"PACKAGE DEAL | REVENUE REPORT"}
                    </div>

                    <div
                      data-plasmic-name={"pie"}
                      data-plasmic-override={overrides.pie}
                      className={classNames(projectcss.all, sty.pie)}
                    >
                      <Ellipse23Icon
                        className={classNames(projectcss.all, sty.svg__irva5)}
                        role={"img"}
                      />

                      <Ellipse21Icon
                        className={classNames(projectcss.all, sty.svg__h0Zf)}
                        role={"img"}
                      />

                      <Ellipse20Icon
                        className={classNames(projectcss.all, sty.svg___08AUa)}
                        role={"img"}
                      />

                      <Ellipse19Icon
                        className={classNames(projectcss.all, sty.svg__heGsM)}
                        role={"img"}
                      />

                      <Ellipse17Icon
                        className={classNames(projectcss.all, sty.svg___5OSp)}
                        role={"img"}
                      />

                      <Ellipse16Icon
                        className={classNames(projectcss.all, sty.svg__iwozX)}
                        role={"img"}
                      />

                      <Ellipse18Icon
                        className={classNames(projectcss.all, sty.svg__gy0O)}
                        role={"img"}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__gYGrV)}
                        displayHeight={"88px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"88px" as const}
                        loading={"lazy" as const}
                        src={{
                          src: ellipse24Uww0GiJsFg,
                          fullWidth: 88,
                          fullHeight: 88,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        data-plasmic-name={"location160800"}
                        data-plasmic-override={overrides.location160800}
                        className={classNames(
                          projectcss.all,
                          sty.location160800
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__i5Mo
                          )}
                        >
                          {"Location 1\n$608.00"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kwK41
                        )}
                      >
                        {"Location 2\n$372.00"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__i6YhV
                        )}
                      >
                        {"Location 3\n$454.00"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cwcBn
                        )}
                      >
                        {"Location 4\n$318.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"frame474"}
                      data-plasmic-override={overrides.frame474}
                      className={classNames(projectcss.all, sty.frame474)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend9"}
                        data-plasmic-override={overrides.legend9}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend9)}
                      >
                        <div
                          data-plasmic-name={"rectangle163"}
                          data-plasmic-override={overrides.rectangle163}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle163
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ek4C
                          )}
                        >
                          {"Location 1"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend10"}
                        data-plasmic-override={overrides.legend10}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend10)}
                      >
                        <div
                          data-plasmic-name={"rectangle164"}
                          data-plasmic-override={overrides.rectangle164}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle164
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dYwUt
                          )}
                        >
                          {"Location 2"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend11"}
                        data-plasmic-override={overrides.legend11}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend11)}
                      >
                        <div
                          data-plasmic-name={"rectangle165"}
                          data-plasmic-override={overrides.rectangle165}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle165
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uUUii
                          )}
                        >
                          {"Location 3"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend12"}
                        data-plasmic-override={overrides.legend12}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend12)}
                      >
                        <div
                          data-plasmic-name={"rectangle166"}
                          data-plasmic-override={overrides.rectangle166}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle166
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fzk
                          )}
                        >
                          {"Location 4"}
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"legend13"}
                        data-plasmic-override={overrides.legend13}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.legend13)}
                      >
                        <div
                          data-plasmic-name={"rectangle167"}
                          data-plasmic-override={overrides.rectangle167}
                          className={classNames(
                            projectcss.all,
                            sty.rectangle167
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fTSuM
                          )}
                        >
                          {"Location 5"}
                        </div>
                      </p.Stack>
                    </div>

                    <div
                      data-plasmic-name={"group472"}
                      data-plasmic-override={overrides.group472}
                      className={classNames(projectcss.all, sty.group472)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__irjal
                        )}
                      >
                        {"Location 5\n$111.00"}
                      </div>

                      <Vector13Icon
                        className={classNames(projectcss.all, sty.svg___8BiQu)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </div>

            <div
              data-plasmic-name={"statusBar"}
              data-plasmic-override={overrides.statusBar}
              className={classNames(projectcss.all, sty.statusBar)}
            >
              <div
                data-plasmic-name={"symbols"}
                data-plasmic-override={overrides.symbols}
                className={classNames(projectcss.all, sty.symbols)}
              >
                <div
                  data-plasmic-name={"battery"}
                  data-plasmic-override={overrides.battery}
                  className={classNames(projectcss.all, sty.battery)}
                >
                  <RectangleIcon
                    className={classNames(projectcss.all, sty.svg__nSZfS)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"rectangle"}
                    data-plasmic-override={overrides.rectangle}
                    className={classNames(projectcss.all, sty.rectangle)}
                  />
                </div>

                <CombinedShapeIcon
                  className={classNames(projectcss.all, sty.svg__t2YlN)}
                  role={"img"}
                />

                <WiFiIcon
                  className={classNames(projectcss.all, sty.svg__tbv5V)}
                  role={"img"}
                />
              </div>

              <div
                data-plasmic-name={"barsStatusTime"}
                data-plasmic-override={overrides.barsStatusTime}
                className={classNames(projectcss.all, sty.barsStatusTime)}
              >
                <div
                  data-plasmic-name={"time"}
                  data-plasmic-override={overrides.time}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.time
                  )}
                >
                  {"9:41"}
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"logoHeader"}
              data-plasmic-override={overrides.logoHeader}
              className={classNames(projectcss.all, sty.logoHeader)}
            >
              <SideBarBg5Icon
                className={classNames(projectcss.all, sty.svg__gh8L0)}
                role={"img"}
              />

              <div
                data-plasmic-name={"intercardLogoNoTagline"}
                data-plasmic-override={overrides.intercardLogoNoTagline}
                className={classNames(
                  projectcss.all,
                  sty.intercardLogoNoTagline
                )}
              />

              <a
                data-plasmic-name={"link"}
                data-plasmic-override={overrides.link}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link,
                  "" as const
                )}
              >
                <IconMenuIcon
                  className={classNames(projectcss.all, sty.svg__pV3LA)}
                  role={"img"}
                />
              </a>
            </div>
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "dashboardV2",
    "frame496",
    "frame475",
    "dashboardTitle",
    "rectangle150",
    "dashboardSettings",
    "rectangle97",
    "frame488",
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "sixWeekGameTrend",
    "group470",
    "legend",
    "rectangle143",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "group468",
    "legend2",
    "rectangle156",
    "legend3",
    "rectangle157",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472",
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time",
    "logoHeader",
    "intercardLogoNoTagline",
    "link"
  ],
  dashboardV2: [
    "dashboardV2",
    "frame496",
    "frame475",
    "dashboardTitle",
    "rectangle150",
    "dashboardSettings",
    "rectangle97",
    "frame488",
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "sixWeekGameTrend",
    "group470",
    "legend",
    "rectangle143",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "group468",
    "legend2",
    "rectangle156",
    "legend3",
    "rectangle157",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472",
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time",
    "logoHeader",
    "intercardLogoNoTagline",
    "link"
  ],
  frame496: [
    "frame496",
    "frame475",
    "dashboardTitle",
    "rectangle150",
    "dashboardSettings",
    "rectangle97",
    "frame488",
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "sixWeekGameTrend",
    "group470",
    "legend",
    "rectangle143",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "group468",
    "legend2",
    "rectangle156",
    "legend3",
    "rectangle157",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472"
  ],
  frame475: [
    "frame475",
    "dashboardTitle",
    "rectangle150",
    "dashboardSettings",
    "rectangle97",
    "frame488",
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58",
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2",
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth",
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2",
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2",
    "sixWeekGameTrend",
    "group470",
    "legend",
    "rectangle143",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers",
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "group468",
    "legend2",
    "rectangle156",
    "legend3",
    "rectangle157",
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160",
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472"
  ],
  dashboardTitle: [
    "dashboardTitle",
    "rectangle150",
    "dashboardSettings",
    "rectangle97"
  ],
  rectangle150: ["rectangle150"],
  dashboardSettings: ["dashboardSettings", "rectangle97"],
  rectangle97: ["rectangle97"],
  frame488: [
    "frame488",
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58"
  ],
  setDateRange: [
    "setDateRange",
    "rectangle67",
    "discountDropdown",
    "rectangle58"
  ],
  rectangle67: ["rectangle67"],
  discountDropdown: ["discountDropdown", "rectangle58"],
  rectangle58: ["rectangle58"],
  overallSales: [
    "overallSales",
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2"
  ],
  group485: [
    "group485",
    "icon",
    "rectangle149",
    "rectangle151",
    "overallSales2"
  ],
  icon: ["icon", "rectangle149", "rectangle151"],
  rectangle149: ["rectangle149"],
  rectangle151: ["rectangle151"],
  overallSales2: ["overallSales2"],
  totalRevenue: [
    "totalRevenue",
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth"
  ],
  group486: [
    "group486",
    "icon2",
    "rectangle152",
    "rectangle140",
    "totalRevenue2",
    "_99HigherThanThePreviousMonth"
  ],
  icon2: ["icon2", "rectangle152", "rectangle140"],
  rectangle152: ["rectangle152"],
  rectangle140: ["rectangle140"],
  totalRevenue2: ["totalRevenue2"],
  _99HigherThanThePreviousMonth: ["_99HigherThanThePreviousMonth"],
  percentOfTotalSales: [
    "percentOfTotalSales",
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2"
  ],
  group487: [
    "group487",
    "icon3",
    "rectangle153",
    "rectangle141",
    "percentOfTotalSales2"
  ],
  icon3: ["icon3", "rectangle153", "rectangle141"],
  rectangle153: ["rectangle153"],
  rectangle141: ["rectangle141"],
  percentOfTotalSales2: ["percentOfTotalSales2"],
  totalRedemptionSales: [
    "totalRedemptionSales",
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2"
  ],
  group488: [
    "group488",
    "icon4",
    "rectangle154",
    "rectangle142",
    "totalRedemptionSales2",
    "_99HigherThanThePreviousMonth2"
  ],
  icon4: ["icon4", "rectangle154", "rectangle142"],
  rectangle154: ["rectangle154"],
  rectangle142: ["rectangle142"],
  totalRedemptionSales2: ["totalRedemptionSales2"],
  _99HigherThanThePreviousMonth2: ["_99HigherThanThePreviousMonth2"],
  sixWeekGameTrend: [
    "sixWeekGameTrend",
    "group470",
    "legend",
    "rectangle143",
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers"
  ],
  group470: ["group470", "legend", "rectangle143"],
  legend: ["legend", "rectangle143"],
  rectangle143: ["rectangle143"],
  group380: [
    "group380",
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145",
    "bottomNumbers"
  ],
  bars: [
    "bars",
    "rectangle144",
    "rectangle146",
    "rectangle148",
    "rectangle147",
    "rectangle155",
    "rectangle145"
  ],
  rectangle144: ["rectangle144"],
  rectangle146: ["rectangle146"],
  rectangle148: ["rectangle148"],
  rectangle147: ["rectangle147"],
  rectangle155: ["rectangle155"],
  rectangle145: ["rectangle145"],
  bottomNumbers: ["bottomNumbers"],
  gateAttraction: [
    "gateAttraction",
    "group381",
    "bottomNumbers2",
    "group468",
    "legend2",
    "rectangle156",
    "legend3",
    "rectangle157"
  ],
  group381: ["group381", "bottomNumbers2"],
  bottomNumbers2: ["bottomNumbers2"],
  group468: ["group468", "legend2", "rectangle156", "legend3", "rectangle157"],
  legend2: ["legend2", "rectangle156"],
  rectangle156: ["rectangle156"],
  legend3: ["legend3", "rectangle157"],
  rectangle157: ["rectangle157"],
  location: [
    "location",
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160"
  ],
  group474: [
    "group474",
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5",
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162",
    "legend6",
    "rectangle160"
  ],
  group469: [
    "group469",
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5"
  ],
  locPrice: [
    "locPrice",
    "locationLable",
    "locationLable2",
    "locationLable3",
    "locationLable4",
    "group479",
    "locationLable5"
  ],
  locationLable: ["locationLable"],
  locationLable2: ["locationLable2"],
  locationLable3: ["locationLable3"],
  locationLable4: ["locationLable4", "group479", "locationLable5"],
  group479: ["group479", "locationLable5"],
  locationLable5: ["locationLable5"],
  group259: [
    "group259",
    "legend4",
    "rectangle158",
    "legend5",
    "rectangle159",
    "legend7",
    "rectangle161",
    "legend8",
    "rectangle162"
  ],
  legend4: ["legend4", "rectangle158"],
  rectangle158: ["rectangle158"],
  legend5: ["legend5", "rectangle159"],
  rectangle159: ["rectangle159"],
  legend7: ["legend7", "rectangle161"],
  rectangle161: ["rectangle161"],
  legend8: ["legend8", "rectangle162"],
  rectangle162: ["rectangle162"],
  legend6: ["legend6", "rectangle160"],
  rectangle160: ["rectangle160"],
  packageDealIRevenueReport: [
    "packageDealIRevenueReport",
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472"
  ],
  group473: [
    "group473",
    "pie",
    "location160800",
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167",
    "group472"
  ],
  pie: ["pie", "location160800"],
  location160800: ["location160800"],
  frame474: [
    "frame474",
    "legend9",
    "rectangle163",
    "legend10",
    "rectangle164",
    "legend11",
    "rectangle165",
    "legend12",
    "rectangle166",
    "legend13",
    "rectangle167"
  ],
  legend9: ["legend9", "rectangle163"],
  rectangle163: ["rectangle163"],
  legend10: ["legend10", "rectangle164"],
  rectangle164: ["rectangle164"],
  legend11: ["legend11", "rectangle165"],
  rectangle165: ["rectangle165"],
  legend12: ["legend12", "rectangle166"],
  rectangle166: ["rectangle166"],
  legend13: ["legend13", "rectangle167"],
  rectangle167: ["rectangle167"],
  group472: ["group472"],
  statusBar: [
    "statusBar",
    "symbols",
    "battery",
    "rectangle",
    "barsStatusTime",
    "time"
  ],
  symbols: ["symbols", "battery", "rectangle"],
  battery: ["battery", "rectangle"],
  rectangle: ["rectangle"],
  barsStatusTime: ["barsStatusTime", "time"],
  time: ["time"],
  logoHeader: ["logoHeader", "intercardLogoNoTagline", "link"],
  intercardLogoNoTagline: ["intercardLogoNoTagline"],
  link: ["link"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  dashboardV2: "div";
  frame496: "div";
  frame475: "div";
  dashboardTitle: "div";
  rectangle150: "div";
  dashboardSettings: "a";
  rectangle97: "div";
  frame488: "div";
  setDateRange: "div";
  rectangle67: "div";
  discountDropdown: "div";
  rectangle58: "div";
  overallSales: "div";
  group485: "div";
  icon: "div";
  rectangle149: "div";
  rectangle151: "div";
  overallSales2: "div";
  totalRevenue: "div";
  group486: "div";
  icon2: "div";
  rectangle152: "div";
  rectangle140: "div";
  totalRevenue2: "div";
  _99HigherThanThePreviousMonth: "div";
  percentOfTotalSales: "div";
  group487: "div";
  icon3: "div";
  rectangle153: "div";
  rectangle141: "div";
  percentOfTotalSales2: "div";
  totalRedemptionSales: "div";
  group488: "div";
  icon4: "div";
  rectangle154: "div";
  rectangle142: "div";
  totalRedemptionSales2: "div";
  _99HigherThanThePreviousMonth2: "div";
  sixWeekGameTrend: "div";
  group470: "div";
  legend: "div";
  rectangle143: "div";
  group380: "div";
  bars: "div";
  rectangle144: "div";
  rectangle146: "div";
  rectangle148: "div";
  rectangle147: "div";
  rectangle155: "div";
  rectangle145: "div";
  bottomNumbers: "div";
  gateAttraction: "div";
  group381: "div";
  bottomNumbers2: "div";
  group468: "div";
  legend2: "div";
  rectangle156: "div";
  legend3: "div";
  rectangle157: "div";
  location: "div";
  group474: "div";
  group469: "div";
  locPrice: "div";
  locationLable: "div";
  locationLable2: "div";
  locationLable3: "div";
  locationLable4: "div";
  group479: "div";
  locationLable5: "div";
  group259: "div";
  legend4: "div";
  rectangle158: "div";
  legend5: "div";
  rectangle159: "div";
  legend7: "div";
  rectangle161: "div";
  legend8: "div";
  rectangle162: "div";
  legend6: "div";
  rectangle160: "div";
  packageDealIRevenueReport: "div";
  group473: "div";
  pie: "div";
  location160800: "div";
  frame474: "div";
  legend9: "div";
  rectangle163: "div";
  legend10: "div";
  rectangle164: "div";
  legend11: "div";
  rectangle165: "div";
  legend12: "div";
  rectangle166: "div";
  legend13: "div";
  rectangle167: "div";
  group472: "div";
  statusBar: "div";
  symbols: "div";
  battery: "div";
  rectangle: "div";
  barsStatusTime: "div";
  time: "div";
  logoHeader: "div";
  intercardLogoNoTagline: "div";
  link: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDashboard__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDashboard__VariantsArgs;
    args?: PlasmicDashboard__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDashboard__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicDashboard__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDashboard__ArgProps,
          internalVariantPropNames: PlasmicDashboard__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    dashboardV2: makeNodeComponent("dashboardV2"),
    frame496: makeNodeComponent("frame496"),
    frame475: makeNodeComponent("frame475"),
    dashboardTitle: makeNodeComponent("dashboardTitle"),
    rectangle150: makeNodeComponent("rectangle150"),
    dashboardSettings: makeNodeComponent("dashboardSettings"),
    rectangle97: makeNodeComponent("rectangle97"),
    frame488: makeNodeComponent("frame488"),
    setDateRange: makeNodeComponent("setDateRange"),
    rectangle67: makeNodeComponent("rectangle67"),
    discountDropdown: makeNodeComponent("discountDropdown"),
    rectangle58: makeNodeComponent("rectangle58"),
    overallSales: makeNodeComponent("overallSales"),
    group485: makeNodeComponent("group485"),
    icon: makeNodeComponent("icon"),
    rectangle149: makeNodeComponent("rectangle149"),
    rectangle151: makeNodeComponent("rectangle151"),
    overallSales2: makeNodeComponent("overallSales2"),
    totalRevenue: makeNodeComponent("totalRevenue"),
    group486: makeNodeComponent("group486"),
    icon2: makeNodeComponent("icon2"),
    rectangle152: makeNodeComponent("rectangle152"),
    rectangle140: makeNodeComponent("rectangle140"),
    totalRevenue2: makeNodeComponent("totalRevenue2"),
    _99HigherThanThePreviousMonth: makeNodeComponent(
      "_99HigherThanThePreviousMonth"
    ),
    percentOfTotalSales: makeNodeComponent("percentOfTotalSales"),
    group487: makeNodeComponent("group487"),
    icon3: makeNodeComponent("icon3"),
    rectangle153: makeNodeComponent("rectangle153"),
    rectangle141: makeNodeComponent("rectangle141"),
    percentOfTotalSales2: makeNodeComponent("percentOfTotalSales2"),
    totalRedemptionSales: makeNodeComponent("totalRedemptionSales"),
    group488: makeNodeComponent("group488"),
    icon4: makeNodeComponent("icon4"),
    rectangle154: makeNodeComponent("rectangle154"),
    rectangle142: makeNodeComponent("rectangle142"),
    totalRedemptionSales2: makeNodeComponent("totalRedemptionSales2"),
    _99HigherThanThePreviousMonth2: makeNodeComponent(
      "_99HigherThanThePreviousMonth2"
    ),
    sixWeekGameTrend: makeNodeComponent("sixWeekGameTrend"),
    group470: makeNodeComponent("group470"),
    legend: makeNodeComponent("legend"),
    rectangle143: makeNodeComponent("rectangle143"),
    group380: makeNodeComponent("group380"),
    bars: makeNodeComponent("bars"),
    rectangle144: makeNodeComponent("rectangle144"),
    rectangle146: makeNodeComponent("rectangle146"),
    rectangle148: makeNodeComponent("rectangle148"),
    rectangle147: makeNodeComponent("rectangle147"),
    rectangle155: makeNodeComponent("rectangle155"),
    rectangle145: makeNodeComponent("rectangle145"),
    bottomNumbers: makeNodeComponent("bottomNumbers"),
    gateAttraction: makeNodeComponent("gateAttraction"),
    group381: makeNodeComponent("group381"),
    bottomNumbers2: makeNodeComponent("bottomNumbers2"),
    group468: makeNodeComponent("group468"),
    legend2: makeNodeComponent("legend2"),
    rectangle156: makeNodeComponent("rectangle156"),
    legend3: makeNodeComponent("legend3"),
    rectangle157: makeNodeComponent("rectangle157"),
    location: makeNodeComponent("location"),
    group474: makeNodeComponent("group474"),
    group469: makeNodeComponent("group469"),
    locPrice: makeNodeComponent("locPrice"),
    locationLable: makeNodeComponent("locationLable"),
    locationLable2: makeNodeComponent("locationLable2"),
    locationLable3: makeNodeComponent("locationLable3"),
    locationLable4: makeNodeComponent("locationLable4"),
    group479: makeNodeComponent("group479"),
    locationLable5: makeNodeComponent("locationLable5"),
    group259: makeNodeComponent("group259"),
    legend4: makeNodeComponent("legend4"),
    rectangle158: makeNodeComponent("rectangle158"),
    legend5: makeNodeComponent("legend5"),
    rectangle159: makeNodeComponent("rectangle159"),
    legend7: makeNodeComponent("legend7"),
    rectangle161: makeNodeComponent("rectangle161"),
    legend8: makeNodeComponent("legend8"),
    rectangle162: makeNodeComponent("rectangle162"),
    legend6: makeNodeComponent("legend6"),
    rectangle160: makeNodeComponent("rectangle160"),
    packageDealIRevenueReport: makeNodeComponent("packageDealIRevenueReport"),
    group473: makeNodeComponent("group473"),
    pie: makeNodeComponent("pie"),
    location160800: makeNodeComponent("location160800"),
    frame474: makeNodeComponent("frame474"),
    legend9: makeNodeComponent("legend9"),
    rectangle163: makeNodeComponent("rectangle163"),
    legend10: makeNodeComponent("legend10"),
    rectangle164: makeNodeComponent("rectangle164"),
    legend11: makeNodeComponent("legend11"),
    rectangle165: makeNodeComponent("rectangle165"),
    legend12: makeNodeComponent("legend12"),
    rectangle166: makeNodeComponent("rectangle166"),
    legend13: makeNodeComponent("legend13"),
    rectangle167: makeNodeComponent("rectangle167"),
    group472: makeNodeComponent("group472"),
    statusBar: makeNodeComponent("statusBar"),
    symbols: makeNodeComponent("symbols"),
    battery: makeNodeComponent("battery"),
    rectangle: makeNodeComponent("rectangle"),
    barsStatusTime: makeNodeComponent("barsStatusTime"),
    time: makeNodeComponent("time"),
    logoHeader: makeNodeComponent("logoHeader"),
    intercardLogoNoTagline: makeNodeComponent("intercardLogoNoTagline"),
    link: makeNodeComponent("link"),

    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
